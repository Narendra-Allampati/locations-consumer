apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    env: {{ .Values.otel.env }}
    product: {{ .Values.product }}
    k8s-app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # maxUnavailable will set up how many pods we can add at a time
      maxUnavailable: 50%
      # maxSurge define how many pods can be unavailable during the rolling update
      maxSurge: 1
  selector:
    matchLabels:
      k8s-app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        product: {{ .Values.product }}
        k8s-app: {{ .Values.appName }}
      annotations:
        ad.datadoghq.com/security-service.check_names: '["openmetrics"]'
        ad.datadoghq.com/security-service.init_configs: '[{}]'
        ad.datadoghq.com/security-service.instances: '[{"prometheus_url": "http://%%host%%:8080/actuator/prometheus",
            "namespace": "{{ .Values.otel.namespace }}", "metrics": ["*"]}]'
        vault.security.banzaicloud.io/vault-role: "{{ .Values.vaultRole }}"
    spec:
      imagePullSecrets:
        - name: gcr-secret
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.image }}:{{ .Values.version }}
          env:
            - name: OTEL_COLLECTOR_ADDRESS
              value: {{ .Values.spring.sleuth.otel.exporter.otlp.endpoint }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers }}
            - name: KAFKA_ENVIRONMENT_SPECIFIC_OFFSET_FACILITIES
              value: {{ .Values.kafka.consumer.facilities.environmentSpecificOffset }}
            - name: KAFKA_ENVIRONMENT_SPECIFIC_OFFSET_LOCATIONS
              value: {{ .Values.kafka.consumer.locations.environmentSpecificOffset }}
            - name: KAFKA_USERNAME
              value: {{ .Values.kafka.username }}
            - name: KAFKA_PASSWORD
              value: {{ .Values.kafka.password }}
            - name: KAFKA_CONSUMER_GROUP
              value: {{ .Values.kafka.consumer.consumerGroup }}
            - name: KAFKA_SCHEMA_REGISTRY_URL
              value: {{ .Values.kafka.schemaRegistry.url }}
            - name: KAFKA_SCHEMA_REGISTRY_API_KEY
              value: {{ .Values.kafka.schemaRegistry.username }}
            - name: KAFKA_SCHEMA_REGISTRY_PASSWORD
              value: {{ .Values.kafka.schemaRegistry.password }}
            - name: KAFKA_FACILITIES_TOPIC
              value: {{ .Values.kafka.consumer.facilities.topic }}
            - name: KAFKA_LOCATIONS_TOPIC
              value: {{ .Values.kafka.consumer.locations.topic }}
            - name: POSTGRES_HOST
              value: {{ .Values.spring.r2dbc.host }}
            - name: POSTGRES_DB
              value: {{ .Values.spring.r2dbc.db }}
            - name: POSTGRES_SCHEME
              value: {{ .Values.spring.r2dbc.scheme }}
            - name: POSTGRES_USERNAME
              value: {{ .Values.spring.r2dbc.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.spring.r2dbc.password }}
            - name: PROFILE
              value: {{ .Values.spring.profiles.active }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}