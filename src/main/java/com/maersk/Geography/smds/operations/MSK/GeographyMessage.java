/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.Geography.smds.operations.MSK;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** The generic avro schema used by publishers to publish events to the enterprise streaming service for Geography interface */
@org.apache.avro.specific.AvroGenerated
public class GeographyMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6732978801831065594L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeographyMessage\",\"namespace\":\"com.maersk.Geography.smds.operations.MSK\",\"doc\":\"The generic avro schema used by publishers to publish events to the enterprise streaming service for Geography interface\",\"fields\":[{\"name\":\"GeographyEntity\",\"type\":{\"type\":\"record\",\"name\":\"GeographyEntity\",\"fields\":[{\"name\":\"Geography\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Geography\",\"doc\":\"Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc \",\"fields\":[{\"name\":\"GeoRowID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeoType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ValidFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ValidTo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Longitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Latitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"TimeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"UTCOffsetMinutes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingStart\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingEnd\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingShiftMinutes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"WorkaroundReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Restricted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"SiteType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GPSFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GSMFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"StreetNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine3\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PostalCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PostalCodeMandatoryFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"StateProvienceMandatory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DialingCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DialingCodedescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PortFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"OlsonTimezone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"BDAType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyAlternateNames\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyAlternateNames\",\"doc\":\"Geography AlternateNames details\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography AlternateNames details\"}}}],\"default\":null},{\"name\":\"GeographyAlternateCodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyAlternateCodes\",\"doc\":\"Geography AlternateCodes details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography AlternateCodes details\"}}}},{\"name\":\"GeographyFence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyFence\",\"doc\":\"Geography Fence details\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeoFenceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyFence\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Fence details\"}}}],\"default\":null},{\"name\":\"GeographyCountryDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyCountryDetails\",\"doc\":\"Geography Country details\",\"fields\":[{\"name\":\"countryRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyCountryAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyCountryAlternateCode\",\"doc\":\"Geography Country AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyCountryAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Country AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Country details\"}}}],\"default\":null},{\"name\":\"GeographyParentDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyParentDetails\",\"doc\":\"Geography Parent details\",\"fields\":[{\"name\":\"getParentRowId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyParentAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyParentAlternateCode\",\"doc\":\"Geography Parent AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyParentAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Parent AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyParentDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Parent details\"}}}],\"default\":null},{\"name\":\"GeographySubCityParentDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographySubCityParentDetails\",\"doc\":\"Geography SubCityParent details\",\"fields\":[{\"name\":\"getSubCityParentRowId\",\"type\":[\"null\",{\"type\":\"str","ing\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographySubCityParentAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographySubCityParentAlternateCode\",\"doc\":\"Geography SubCityParent AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographySubCityParentAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography SubCityParent AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography SubCityParent details\"}}}],\"default\":null},{\"name\":\"GeographyBDADetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDADetails\",\"doc\":\"Geography BDA details\",\"fields\":[{\"name\":\"bdaRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"BDAType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyBDAAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDAAlternateCode\",\"doc\":\"Geography BDA AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDAAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDADetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA details\"}}}],\"default\":null},{\"name\":\"GeographyBDALocationsDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDALocationDetails\",\"doc\":\"Geography BDA Location details\",\"fields\":[{\"name\":\"bdaLocRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyBDALocationAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDALocationAlternateCode\",\"doc\":\"Geography BDALocation AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDALocation AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA Location details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.Geography\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc \"}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyEntity\"},\"doc\":\"wrapper tag to hold Geography information\"}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyMessage\",\"connect.parameters\":{\"io.confluent.connect.avro.field.doc.GeographyEntity\":\"wrapper tag to hold Geography information\",\"io.confluent.connect.avro.record.doc\":\"The generic avro schema used by publishers to publish events to the enterprise streaming service for Geography interface\"},\"connect.version\":4}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GeographyMessage> ENCODER =
      new BinaryMessageEncoder<GeographyMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GeographyMessage> DECODER =
      new BinaryMessageDecoder<GeographyMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GeographyMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GeographyMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GeographyMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GeographyMessage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GeographyMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GeographyMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GeographyMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GeographyMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** wrapper tag to hold Geography information */
   private com.maersk.Geography.smds.operations.MSK.GeographyEntity GeographyEntity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeographyMessage() {}

  /**
   * All-args constructor.
   * @param GeographyEntity wrapper tag to hold Geography information
   */
  public GeographyMessage(com.maersk.Geography.smds.operations.MSK.GeographyEntity GeographyEntity) {
    this.GeographyEntity = GeographyEntity;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return GeographyEntity;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: GeographyEntity = (com.maersk.Geography.smds.operations.MSK.GeographyEntity)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'GeographyEntity' field.
   * @return wrapper tag to hold Geography information
   */
  public com.maersk.Geography.smds.operations.MSK.GeographyEntity getGeographyEntity() {
    return GeographyEntity;
  }


  /**
   * Sets the value of the 'GeographyEntity' field.
   * wrapper tag to hold Geography information
   * @param value the value to set.
   */
  public void setGeographyEntity(com.maersk.Geography.smds.operations.MSK.GeographyEntity value) {
    this.GeographyEntity = value;
  }

  /**
   * Creates a new GeographyMessage RecordBuilder.
   * @return A new GeographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder newBuilder() {
    return new com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder();
  }

  /**
   * Creates a new GeographyMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder other) {
    if (other == null) {
      return new com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder();
    } else {
      return new com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder(other);
    }
  }

  /**
   * Creates a new GeographyMessage RecordBuilder by copying an existing GeographyMessage instance.
   * @param other The existing instance to copy.
   * @return A new GeographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.GeographyMessage other) {
    if (other == null) {
      return new com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder();
    } else {
      return new com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for GeographyMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeographyMessage>
    implements org.apache.avro.data.RecordBuilder<GeographyMessage> {

    /** wrapper tag to hold Geography information */
    private com.maersk.Geography.smds.operations.MSK.GeographyEntity GeographyEntity;
    private com.maersk.Geography.smds.operations.MSK.GeographyEntity.Builder GeographyEntityBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.GeographyEntity)) {
        this.GeographyEntity = data().deepCopy(fields()[0].schema(), other.GeographyEntity);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasGeographyEntityBuilder()) {
        this.GeographyEntityBuilder = com.maersk.Geography.smds.operations.MSK.GeographyEntity.newBuilder(other.getGeographyEntityBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing GeographyMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.GeographyMessage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.GeographyEntity)) {
        this.GeographyEntity = data().deepCopy(fields()[0].schema(), other.GeographyEntity);
        fieldSetFlags()[0] = true;
      }
      this.GeographyEntityBuilder = null;
    }

    /**
      * Gets the value of the 'GeographyEntity' field.
      * wrapper tag to hold Geography information
      * @return The value.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyEntity getGeographyEntity() {
      return GeographyEntity;
    }


    /**
      * Sets the value of the 'GeographyEntity' field.
      * wrapper tag to hold Geography information
      * @param value The value of 'GeographyEntity'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder setGeographyEntity(com.maersk.Geography.smds.operations.MSK.GeographyEntity value) {
      validate(fields()[0], value);
      this.GeographyEntityBuilder = null;
      this.GeographyEntity = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyEntity' field has been set.
      * wrapper tag to hold Geography information
      * @return True if the 'GeographyEntity' field has been set, false otherwise.
      */
    public boolean hasGeographyEntity() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'GeographyEntity' field and creates one if it doesn't exist yet.
     * wrapper tag to hold Geography information
     * @return This builder.
     */
    public com.maersk.Geography.smds.operations.MSK.GeographyEntity.Builder getGeographyEntityBuilder() {
      if (GeographyEntityBuilder == null) {
        if (hasGeographyEntity()) {
          setGeographyEntityBuilder(com.maersk.Geography.smds.operations.MSK.GeographyEntity.newBuilder(GeographyEntity));
        } else {
          setGeographyEntityBuilder(com.maersk.Geography.smds.operations.MSK.GeographyEntity.newBuilder());
        }
      }
      return GeographyEntityBuilder;
    }

    /**
     * Sets the Builder instance for the 'GeographyEntity' field
     * wrapper tag to hold Geography information
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder setGeographyEntityBuilder(com.maersk.Geography.smds.operations.MSK.GeographyEntity.Builder value) {
      clearGeographyEntity();
      GeographyEntityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'GeographyEntity' field has an active Builder instance
     * wrapper tag to hold Geography information
     * @return True if the 'GeographyEntity' field has an active Builder instance
     */
    public boolean hasGeographyEntityBuilder() {
      return GeographyEntityBuilder != null;
    }

    /**
      * Clears the value of the 'GeographyEntity' field.
      * wrapper tag to hold Geography information
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyMessage.Builder clearGeographyEntity() {
      GeographyEntity = null;
      GeographyEntityBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GeographyMessage build() {
      try {
        GeographyMessage record = new GeographyMessage();
        if (GeographyEntityBuilder != null) {
          try {
            record.GeographyEntity = this.GeographyEntityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("GeographyEntity"));
            throw e;
          }
        } else {
          record.GeographyEntity = fieldSetFlags()[0] ? this.GeographyEntity : (com.maersk.Geography.smds.operations.MSK.GeographyEntity) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GeographyMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<GeographyMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GeographyMessage>
    READER$ = (org.apache.avro.io.DatumReader<GeographyMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.GeographyEntity.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.GeographyEntity == null) {
        this.GeographyEntity = new com.maersk.Geography.smds.operations.MSK.GeographyEntity();
      }
      this.GeographyEntity.customDecode(in);

    } else {
      for (int i = 0; i < 1; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.GeographyEntity == null) {
            this.GeographyEntity = new com.maersk.Geography.smds.operations.MSK.GeographyEntity();
          }
          this.GeographyEntity.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










