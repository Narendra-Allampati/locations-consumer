/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.Geography.smds.operations.MSK;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc  */
@org.apache.avro.specific.AvroGenerated
public class Geography extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6399913694416209200L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Geography\",\"namespace\":\"com.maersk.Geography.smds.operations.MSK\",\"doc\":\"Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc \",\"fields\":[{\"name\":\"GeoRowID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeoType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ValidFrom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ValidTo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Longitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Latitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"TimeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"UTCOffsetMinutes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingStart\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingEnd\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DaylightSavingShiftMinutes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"WorkaroundReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Restricted\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"SiteType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GPSFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GSMFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"StreetNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"AddressLine3\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PostalCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PostalCodeMandatoryFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"StateProvienceMandatory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DialingCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DialingCodedescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"PortFlag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"OlsonTimezone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"BDAType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyAlternateNames\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyAlternateNames\",\"doc\":\"Geography AlternateNames details\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography AlternateNames details\"}}}],\"default\":null},{\"name\":\"GeographyAlternateCodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyAlternateCodes\",\"doc\":\"Geography AlternateCodes details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography AlternateCodes details\"}}}},{\"name\":\"GeographyFence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyFence\",\"doc\":\"Geography Fence details\",\"fields\":[{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeoFenceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyFence\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Fence details\"}}}],\"default\":null},{\"name\":\"GeographyCountryDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyCountryDetails\",\"doc\":\"Geography Country details\",\"fields\":[{\"name\":\"countryRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyCountryAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyCountryAlternateCode\",\"doc\":\"Geography Country AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyCountryAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Country AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Country details\"}}}],\"default\":null},{\"name\":\"GeographyParentDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyParentDetails\",\"doc\":\"Geography Parent details\",\"fields\":[{\"name\":\"getParentRowId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyParentAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyParentAlternateCode\",\"doc\":\"Geography Parent AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyParentAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Parent AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyParentDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Parent details\"}}}],\"default\":null},{\"name\":\"GeographySubCityParentDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographySubCityParentDetails\",\"doc\":\"Geography SubCityParent details\",\"fields\":[{\"name\":\"getSubCityParentRowId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographySubCityParentAlternateCodeDetails\",\"type\":[\"nul","l\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographySubCityParentAlternateCode\",\"doc\":\"Geography SubCityParent AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographySubCityParentAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography SubCityParent AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography SubCityParent details\"}}}],\"default\":null},{\"name\":\"GeographyBDADetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDADetails\",\"doc\":\"Geography BDA details\",\"fields\":[{\"name\":\"bdaRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"BDAType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyBDAAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDAAlternateCode\",\"doc\":\"Geography BDA AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDAAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDADetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA details\"}}}],\"default\":null},{\"name\":\"GeographyBDALocationsDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDALocationDetails\",\"doc\":\"Geography BDA Location details\",\"fields\":[{\"name\":\"bdaLocRowid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"GeographyBDALocationAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDALocationAlternateCode\",\"doc\":\"Geography BDALocation AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"Code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDALocation AlternateCode details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography BDA Location details\"}}}],\"default\":null}],\"connect.name\":\"com.maersk.Geography.smds.operations.MSK.Geography\",\"connect.parameters\":{\"io.confluent.connect.avro.record.doc\":\"Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc \"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Geography> ENCODER =
      new BinaryMessageEncoder<Geography>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Geography> DECODER =
      new BinaryMessageDecoder<Geography>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Geography> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Geography> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Geography> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Geography>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Geography to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Geography from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Geography instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Geography fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String GeoRowID;
   private java.lang.String GeoType;
   private java.lang.String Name;
   private java.lang.String Status;
   private java.lang.String ValidFrom;
   private java.lang.String ValidTo;
   private java.lang.String Longitude;
   private java.lang.String Latitude;
   private java.lang.String TimeZone;
   private java.lang.String DaylightSavingTime;
   private java.lang.String UTCOffsetMinutes;
   private java.lang.String DaylightSavingStart;
   private java.lang.String DaylightSavingEnd;
   private java.lang.String DaylightSavingShiftMinutes;
   private java.lang.String Description;
   private java.lang.String WorkaroundReason;
   private java.lang.String Restricted;
   private java.lang.String SiteType;
   private java.lang.String GPSFlag;
   private java.lang.String GSMFlag;
   private java.lang.String StreetNumber;
   private java.lang.String AddressLine1;
   private java.lang.String AddressLine2;
   private java.lang.String AddressLine3;
   private java.lang.String PostalCode;
   private java.lang.String PostalCodeMandatoryFlag;
   private java.lang.String StateProvienceMandatory;
   private java.lang.String DialingCode;
   private java.lang.String DialingCodedescription;
   private java.lang.String PortFlag;
   private java.lang.String OlsonTimezone;
   private java.lang.String BDAType;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> GeographyAlternateNames;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> GeographyAlternateCodes;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> GeographyFence;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> GeographyCountryDetails;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> GeographyParentDetails;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> GeographySubCityParentDetails;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> GeographyBDADetails;
   private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> GeographyBDALocationsDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Geography() {}

  /**
   * All-args constructor.
   * @param GeoRowID The new value for GeoRowID
   * @param GeoType The new value for GeoType
   * @param Name The new value for Name
   * @param Status The new value for Status
   * @param ValidFrom The new value for ValidFrom
   * @param ValidTo The new value for ValidTo
   * @param Longitude The new value for Longitude
   * @param Latitude The new value for Latitude
   * @param TimeZone The new value for TimeZone
   * @param DaylightSavingTime The new value for DaylightSavingTime
   * @param UTCOffsetMinutes The new value for UTCOffsetMinutes
   * @param DaylightSavingStart The new value for DaylightSavingStart
   * @param DaylightSavingEnd The new value for DaylightSavingEnd
   * @param DaylightSavingShiftMinutes The new value for DaylightSavingShiftMinutes
   * @param Description The new value for Description
   * @param WorkaroundReason The new value for WorkaroundReason
   * @param Restricted The new value for Restricted
   * @param SiteType The new value for SiteType
   * @param GPSFlag The new value for GPSFlag
   * @param GSMFlag The new value for GSMFlag
   * @param StreetNumber The new value for StreetNumber
   * @param AddressLine1 The new value for AddressLine1
   * @param AddressLine2 The new value for AddressLine2
   * @param AddressLine3 The new value for AddressLine3
   * @param PostalCode The new value for PostalCode
   * @param PostalCodeMandatoryFlag The new value for PostalCodeMandatoryFlag
   * @param StateProvienceMandatory The new value for StateProvienceMandatory
   * @param DialingCode The new value for DialingCode
   * @param DialingCodedescription The new value for DialingCodedescription
   * @param PortFlag The new value for PortFlag
   * @param OlsonTimezone The new value for OlsonTimezone
   * @param BDAType The new value for BDAType
   * @param GeographyAlternateNames The new value for GeographyAlternateNames
   * @param GeographyAlternateCodes The new value for GeographyAlternateCodes
   * @param GeographyFence The new value for GeographyFence
   * @param GeographyCountryDetails The new value for GeographyCountryDetails
   * @param GeographyParentDetails The new value for GeographyParentDetails
   * @param GeographySubCityParentDetails The new value for GeographySubCityParentDetails
   * @param GeographyBDADetails The new value for GeographyBDADetails
   * @param GeographyBDALocationsDetails The new value for GeographyBDALocationsDetails
   */
  public Geography(java.lang.String GeoRowID, java.lang.String GeoType, java.lang.String Name, java.lang.String Status, java.lang.String ValidFrom, java.lang.String ValidTo, java.lang.String Longitude, java.lang.String Latitude, java.lang.String TimeZone, java.lang.String DaylightSavingTime, java.lang.String UTCOffsetMinutes, java.lang.String DaylightSavingStart, java.lang.String DaylightSavingEnd, java.lang.String DaylightSavingShiftMinutes, java.lang.String Description, java.lang.String WorkaroundReason, java.lang.String Restricted, java.lang.String SiteType, java.lang.String GPSFlag, java.lang.String GSMFlag, java.lang.String StreetNumber, java.lang.String AddressLine1, java.lang.String AddressLine2, java.lang.String AddressLine3, java.lang.String PostalCode, java.lang.String PostalCodeMandatoryFlag, java.lang.String StateProvienceMandatory, java.lang.String DialingCode, java.lang.String DialingCodedescription, java.lang.String PortFlag, java.lang.String OlsonTimezone, java.lang.String BDAType, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> GeographyAlternateNames, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> GeographyAlternateCodes, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> GeographyFence, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> GeographyCountryDetails, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> GeographyParentDetails, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> GeographySubCityParentDetails, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> GeographyBDADetails, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> GeographyBDALocationsDetails) {
    this.GeoRowID = GeoRowID;
    this.GeoType = GeoType;
    this.Name = Name;
    this.Status = Status;
    this.ValidFrom = ValidFrom;
    this.ValidTo = ValidTo;
    this.Longitude = Longitude;
    this.Latitude = Latitude;
    this.TimeZone = TimeZone;
    this.DaylightSavingTime = DaylightSavingTime;
    this.UTCOffsetMinutes = UTCOffsetMinutes;
    this.DaylightSavingStart = DaylightSavingStart;
    this.DaylightSavingEnd = DaylightSavingEnd;
    this.DaylightSavingShiftMinutes = DaylightSavingShiftMinutes;
    this.Description = Description;
    this.WorkaroundReason = WorkaroundReason;
    this.Restricted = Restricted;
    this.SiteType = SiteType;
    this.GPSFlag = GPSFlag;
    this.GSMFlag = GSMFlag;
    this.StreetNumber = StreetNumber;
    this.AddressLine1 = AddressLine1;
    this.AddressLine2 = AddressLine2;
    this.AddressLine3 = AddressLine3;
    this.PostalCode = PostalCode;
    this.PostalCodeMandatoryFlag = PostalCodeMandatoryFlag;
    this.StateProvienceMandatory = StateProvienceMandatory;
    this.DialingCode = DialingCode;
    this.DialingCodedescription = DialingCodedescription;
    this.PortFlag = PortFlag;
    this.OlsonTimezone = OlsonTimezone;
    this.BDAType = BDAType;
    this.GeographyAlternateNames = GeographyAlternateNames;
    this.GeographyAlternateCodes = GeographyAlternateCodes;
    this.GeographyFence = GeographyFence;
    this.GeographyCountryDetails = GeographyCountryDetails;
    this.GeographyParentDetails = GeographyParentDetails;
    this.GeographySubCityParentDetails = GeographySubCityParentDetails;
    this.GeographyBDADetails = GeographyBDADetails;
    this.GeographyBDALocationsDetails = GeographyBDALocationsDetails;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return GeoRowID;
    case 1: return GeoType;
    case 2: return Name;
    case 3: return Status;
    case 4: return ValidFrom;
    case 5: return ValidTo;
    case 6: return Longitude;
    case 7: return Latitude;
    case 8: return TimeZone;
    case 9: return DaylightSavingTime;
    case 10: return UTCOffsetMinutes;
    case 11: return DaylightSavingStart;
    case 12: return DaylightSavingEnd;
    case 13: return DaylightSavingShiftMinutes;
    case 14: return Description;
    case 15: return WorkaroundReason;
    case 16: return Restricted;
    case 17: return SiteType;
    case 18: return GPSFlag;
    case 19: return GSMFlag;
    case 20: return StreetNumber;
    case 21: return AddressLine1;
    case 22: return AddressLine2;
    case 23: return AddressLine3;
    case 24: return PostalCode;
    case 25: return PostalCodeMandatoryFlag;
    case 26: return StateProvienceMandatory;
    case 27: return DialingCode;
    case 28: return DialingCodedescription;
    case 29: return PortFlag;
    case 30: return OlsonTimezone;
    case 31: return BDAType;
    case 32: return GeographyAlternateNames;
    case 33: return GeographyAlternateCodes;
    case 34: return GeographyFence;
    case 35: return GeographyCountryDetails;
    case 36: return GeographyParentDetails;
    case 37: return GeographySubCityParentDetails;
    case 38: return GeographyBDADetails;
    case 39: return GeographyBDALocationsDetails;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: GeoRowID = value$ != null ? value$.toString() : null; break;
    case 1: GeoType = value$ != null ? value$.toString() : null; break;
    case 2: Name = value$ != null ? value$.toString() : null; break;
    case 3: Status = value$ != null ? value$.toString() : null; break;
    case 4: ValidFrom = value$ != null ? value$.toString() : null; break;
    case 5: ValidTo = value$ != null ? value$.toString() : null; break;
    case 6: Longitude = value$ != null ? value$.toString() : null; break;
    case 7: Latitude = value$ != null ? value$.toString() : null; break;
    case 8: TimeZone = value$ != null ? value$.toString() : null; break;
    case 9: DaylightSavingTime = value$ != null ? value$.toString() : null; break;
    case 10: UTCOffsetMinutes = value$ != null ? value$.toString() : null; break;
    case 11: DaylightSavingStart = value$ != null ? value$.toString() : null; break;
    case 12: DaylightSavingEnd = value$ != null ? value$.toString() : null; break;
    case 13: DaylightSavingShiftMinutes = value$ != null ? value$.toString() : null; break;
    case 14: Description = value$ != null ? value$.toString() : null; break;
    case 15: WorkaroundReason = value$ != null ? value$.toString() : null; break;
    case 16: Restricted = value$ != null ? value$.toString() : null; break;
    case 17: SiteType = value$ != null ? value$.toString() : null; break;
    case 18: GPSFlag = value$ != null ? value$.toString() : null; break;
    case 19: GSMFlag = value$ != null ? value$.toString() : null; break;
    case 20: StreetNumber = value$ != null ? value$.toString() : null; break;
    case 21: AddressLine1 = value$ != null ? value$.toString() : null; break;
    case 22: AddressLine2 = value$ != null ? value$.toString() : null; break;
    case 23: AddressLine3 = value$ != null ? value$.toString() : null; break;
    case 24: PostalCode = value$ != null ? value$.toString() : null; break;
    case 25: PostalCodeMandatoryFlag = value$ != null ? value$.toString() : null; break;
    case 26: StateProvienceMandatory = value$ != null ? value$.toString() : null; break;
    case 27: DialingCode = value$ != null ? value$.toString() : null; break;
    case 28: DialingCodedescription = value$ != null ? value$.toString() : null; break;
    case 29: PortFlag = value$ != null ? value$.toString() : null; break;
    case 30: OlsonTimezone = value$ != null ? value$.toString() : null; break;
    case 31: BDAType = value$ != null ? value$.toString() : null; break;
    case 32: GeographyAlternateNames = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>)value$; break;
    case 33: GeographyAlternateCodes = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>)value$; break;
    case 34: GeographyFence = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence>)value$; break;
    case 35: GeographyCountryDetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>)value$; break;
    case 36: GeographyParentDetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>)value$; break;
    case 37: GeographySubCityParentDetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>)value$; break;
    case 38: GeographyBDADetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>)value$; break;
    case 39: GeographyBDALocationsDetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'GeoRowID' field.
   * @return The value of the 'GeoRowID' field.
   */
  public java.lang.String getGeoRowID() {
    return GeoRowID;
  }


  /**
   * Sets the value of the 'GeoRowID' field.
   * @param value the value to set.
   */
  public void setGeoRowID(java.lang.String value) {
    this.GeoRowID = value;
  }

  /**
   * Gets the value of the 'GeoType' field.
   * @return The value of the 'GeoType' field.
   */
  public java.lang.String getGeoType() {
    return GeoType;
  }


  /**
   * Sets the value of the 'GeoType' field.
   * @param value the value to set.
   */
  public void setGeoType(java.lang.String value) {
    this.GeoType = value;
  }

  /**
   * Gets the value of the 'Name' field.
   * @return The value of the 'Name' field.
   */
  public java.lang.String getName() {
    return Name;
  }


  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'Status' field.
   * @return The value of the 'Status' field.
   */
  public java.lang.String getStatus() {
    return Status;
  }


  /**
   * Sets the value of the 'Status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.Status = value;
  }

  /**
   * Gets the value of the 'ValidFrom' field.
   * @return The value of the 'ValidFrom' field.
   */
  public java.lang.String getValidFrom() {
    return ValidFrom;
  }


  /**
   * Sets the value of the 'ValidFrom' field.
   * @param value the value to set.
   */
  public void setValidFrom(java.lang.String value) {
    this.ValidFrom = value;
  }

  /**
   * Gets the value of the 'ValidTo' field.
   * @return The value of the 'ValidTo' field.
   */
  public java.lang.String getValidTo() {
    return ValidTo;
  }


  /**
   * Sets the value of the 'ValidTo' field.
   * @param value the value to set.
   */
  public void setValidTo(java.lang.String value) {
    this.ValidTo = value;
  }

  /**
   * Gets the value of the 'Longitude' field.
   * @return The value of the 'Longitude' field.
   */
  public java.lang.String getLongitude() {
    return Longitude;
  }


  /**
   * Sets the value of the 'Longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.String value) {
    this.Longitude = value;
  }

  /**
   * Gets the value of the 'Latitude' field.
   * @return The value of the 'Latitude' field.
   */
  public java.lang.String getLatitude() {
    return Latitude;
  }


  /**
   * Sets the value of the 'Latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.String value) {
    this.Latitude = value;
  }

  /**
   * Gets the value of the 'TimeZone' field.
   * @return The value of the 'TimeZone' field.
   */
  public java.lang.String getTimeZone() {
    return TimeZone;
  }


  /**
   * Sets the value of the 'TimeZone' field.
   * @param value the value to set.
   */
  public void setTimeZone(java.lang.String value) {
    this.TimeZone = value;
  }

  /**
   * Gets the value of the 'DaylightSavingTime' field.
   * @return The value of the 'DaylightSavingTime' field.
   */
  public java.lang.String getDaylightSavingTime() {
    return DaylightSavingTime;
  }


  /**
   * Sets the value of the 'DaylightSavingTime' field.
   * @param value the value to set.
   */
  public void setDaylightSavingTime(java.lang.String value) {
    this.DaylightSavingTime = value;
  }

  /**
   * Gets the value of the 'UTCOffsetMinutes' field.
   * @return The value of the 'UTCOffsetMinutes' field.
   */
  public java.lang.String getUTCOffsetMinutes() {
    return UTCOffsetMinutes;
  }


  /**
   * Sets the value of the 'UTCOffsetMinutes' field.
   * @param value the value to set.
   */
  public void setUTCOffsetMinutes(java.lang.String value) {
    this.UTCOffsetMinutes = value;
  }

  /**
   * Gets the value of the 'DaylightSavingStart' field.
   * @return The value of the 'DaylightSavingStart' field.
   */
  public java.lang.String getDaylightSavingStart() {
    return DaylightSavingStart;
  }


  /**
   * Sets the value of the 'DaylightSavingStart' field.
   * @param value the value to set.
   */
  public void setDaylightSavingStart(java.lang.String value) {
    this.DaylightSavingStart = value;
  }

  /**
   * Gets the value of the 'DaylightSavingEnd' field.
   * @return The value of the 'DaylightSavingEnd' field.
   */
  public java.lang.String getDaylightSavingEnd() {
    return DaylightSavingEnd;
  }


  /**
   * Sets the value of the 'DaylightSavingEnd' field.
   * @param value the value to set.
   */
  public void setDaylightSavingEnd(java.lang.String value) {
    this.DaylightSavingEnd = value;
  }

  /**
   * Gets the value of the 'DaylightSavingShiftMinutes' field.
   * @return The value of the 'DaylightSavingShiftMinutes' field.
   */
  public java.lang.String getDaylightSavingShiftMinutes() {
    return DaylightSavingShiftMinutes;
  }


  /**
   * Sets the value of the 'DaylightSavingShiftMinutes' field.
   * @param value the value to set.
   */
  public void setDaylightSavingShiftMinutes(java.lang.String value) {
    this.DaylightSavingShiftMinutes = value;
  }

  /**
   * Gets the value of the 'Description' field.
   * @return The value of the 'Description' field.
   */
  public java.lang.String getDescription() {
    return Description;
  }


  /**
   * Sets the value of the 'Description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.Description = value;
  }

  /**
   * Gets the value of the 'WorkaroundReason' field.
   * @return The value of the 'WorkaroundReason' field.
   */
  public java.lang.String getWorkaroundReason() {
    return WorkaroundReason;
  }


  /**
   * Sets the value of the 'WorkaroundReason' field.
   * @param value the value to set.
   */
  public void setWorkaroundReason(java.lang.String value) {
    this.WorkaroundReason = value;
  }

  /**
   * Gets the value of the 'Restricted' field.
   * @return The value of the 'Restricted' field.
   */
  public java.lang.String getRestricted() {
    return Restricted;
  }


  /**
   * Sets the value of the 'Restricted' field.
   * @param value the value to set.
   */
  public void setRestricted(java.lang.String value) {
    this.Restricted = value;
  }

  /**
   * Gets the value of the 'SiteType' field.
   * @return The value of the 'SiteType' field.
   */
  public java.lang.String getSiteType() {
    return SiteType;
  }


  /**
   * Sets the value of the 'SiteType' field.
   * @param value the value to set.
   */
  public void setSiteType(java.lang.String value) {
    this.SiteType = value;
  }

  /**
   * Gets the value of the 'GPSFlag' field.
   * @return The value of the 'GPSFlag' field.
   */
  public java.lang.String getGPSFlag() {
    return GPSFlag;
  }


  /**
   * Sets the value of the 'GPSFlag' field.
   * @param value the value to set.
   */
  public void setGPSFlag(java.lang.String value) {
    this.GPSFlag = value;
  }

  /**
   * Gets the value of the 'GSMFlag' field.
   * @return The value of the 'GSMFlag' field.
   */
  public java.lang.String getGSMFlag() {
    return GSMFlag;
  }


  /**
   * Sets the value of the 'GSMFlag' field.
   * @param value the value to set.
   */
  public void setGSMFlag(java.lang.String value) {
    this.GSMFlag = value;
  }

  /**
   * Gets the value of the 'StreetNumber' field.
   * @return The value of the 'StreetNumber' field.
   */
  public java.lang.String getStreetNumber() {
    return StreetNumber;
  }


  /**
   * Sets the value of the 'StreetNumber' field.
   * @param value the value to set.
   */
  public void setStreetNumber(java.lang.String value) {
    this.StreetNumber = value;
  }

  /**
   * Gets the value of the 'AddressLine1' field.
   * @return The value of the 'AddressLine1' field.
   */
  public java.lang.String getAddressLine1() {
    return AddressLine1;
  }


  /**
   * Sets the value of the 'AddressLine1' field.
   * @param value the value to set.
   */
  public void setAddressLine1(java.lang.String value) {
    this.AddressLine1 = value;
  }

  /**
   * Gets the value of the 'AddressLine2' field.
   * @return The value of the 'AddressLine2' field.
   */
  public java.lang.String getAddressLine2() {
    return AddressLine2;
  }


  /**
   * Sets the value of the 'AddressLine2' field.
   * @param value the value to set.
   */
  public void setAddressLine2(java.lang.String value) {
    this.AddressLine2 = value;
  }

  /**
   * Gets the value of the 'AddressLine3' field.
   * @return The value of the 'AddressLine3' field.
   */
  public java.lang.String getAddressLine3() {
    return AddressLine3;
  }


  /**
   * Sets the value of the 'AddressLine3' field.
   * @param value the value to set.
   */
  public void setAddressLine3(java.lang.String value) {
    this.AddressLine3 = value;
  }

  /**
   * Gets the value of the 'PostalCode' field.
   * @return The value of the 'PostalCode' field.
   */
  public java.lang.String getPostalCode() {
    return PostalCode;
  }


  /**
   * Sets the value of the 'PostalCode' field.
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.String value) {
    this.PostalCode = value;
  }

  /**
   * Gets the value of the 'PostalCodeMandatoryFlag' field.
   * @return The value of the 'PostalCodeMandatoryFlag' field.
   */
  public java.lang.String getPostalCodeMandatoryFlag() {
    return PostalCodeMandatoryFlag;
  }


  /**
   * Sets the value of the 'PostalCodeMandatoryFlag' field.
   * @param value the value to set.
   */
  public void setPostalCodeMandatoryFlag(java.lang.String value) {
    this.PostalCodeMandatoryFlag = value;
  }

  /**
   * Gets the value of the 'StateProvienceMandatory' field.
   * @return The value of the 'StateProvienceMandatory' field.
   */
  public java.lang.String getStateProvienceMandatory() {
    return StateProvienceMandatory;
  }


  /**
   * Sets the value of the 'StateProvienceMandatory' field.
   * @param value the value to set.
   */
  public void setStateProvienceMandatory(java.lang.String value) {
    this.StateProvienceMandatory = value;
  }

  /**
   * Gets the value of the 'DialingCode' field.
   * @return The value of the 'DialingCode' field.
   */
  public java.lang.String getDialingCode() {
    return DialingCode;
  }


  /**
   * Sets the value of the 'DialingCode' field.
   * @param value the value to set.
   */
  public void setDialingCode(java.lang.String value) {
    this.DialingCode = value;
  }

  /**
   * Gets the value of the 'DialingCodedescription' field.
   * @return The value of the 'DialingCodedescription' field.
   */
  public java.lang.String getDialingCodedescription() {
    return DialingCodedescription;
  }


  /**
   * Sets the value of the 'DialingCodedescription' field.
   * @param value the value to set.
   */
  public void setDialingCodedescription(java.lang.String value) {
    this.DialingCodedescription = value;
  }

  /**
   * Gets the value of the 'PortFlag' field.
   * @return The value of the 'PortFlag' field.
   */
  public java.lang.String getPortFlag() {
    return PortFlag;
  }


  /**
   * Sets the value of the 'PortFlag' field.
   * @param value the value to set.
   */
  public void setPortFlag(java.lang.String value) {
    this.PortFlag = value;
  }

  /**
   * Gets the value of the 'OlsonTimezone' field.
   * @return The value of the 'OlsonTimezone' field.
   */
  public java.lang.String getOlsonTimezone() {
    return OlsonTimezone;
  }


  /**
   * Sets the value of the 'OlsonTimezone' field.
   * @param value the value to set.
   */
  public void setOlsonTimezone(java.lang.String value) {
    this.OlsonTimezone = value;
  }

  /**
   * Gets the value of the 'BDAType' field.
   * @return The value of the 'BDAType' field.
   */
  public java.lang.String getBDAType() {
    return BDAType;
  }


  /**
   * Sets the value of the 'BDAType' field.
   * @param value the value to set.
   */
  public void setBDAType(java.lang.String value) {
    this.BDAType = value;
  }

  /**
   * Gets the value of the 'GeographyAlternateNames' field.
   * @return The value of the 'GeographyAlternateNames' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> getGeographyAlternateNames() {
    return GeographyAlternateNames;
  }


  /**
   * Sets the value of the 'GeographyAlternateNames' field.
   * @param value the value to set.
   */
  public void setGeographyAlternateNames(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> value) {
    this.GeographyAlternateNames = value;
  }

  /**
   * Gets the value of the 'GeographyAlternateCodes' field.
   * @return The value of the 'GeographyAlternateCodes' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> getGeographyAlternateCodes() {
    return GeographyAlternateCodes;
  }


  /**
   * Sets the value of the 'GeographyAlternateCodes' field.
   * @param value the value to set.
   */
  public void setGeographyAlternateCodes(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> value) {
    this.GeographyAlternateCodes = value;
  }

  /**
   * Gets the value of the 'GeographyFence' field.
   * @return The value of the 'GeographyFence' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> getGeographyFence() {
    return GeographyFence;
  }


  /**
   * Sets the value of the 'GeographyFence' field.
   * @param value the value to set.
   */
  public void setGeographyFence(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> value) {
    this.GeographyFence = value;
  }

  /**
   * Gets the value of the 'GeographyCountryDetails' field.
   * @return The value of the 'GeographyCountryDetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> getGeographyCountryDetails() {
    return GeographyCountryDetails;
  }


  /**
   * Sets the value of the 'GeographyCountryDetails' field.
   * @param value the value to set.
   */
  public void setGeographyCountryDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> value) {
    this.GeographyCountryDetails = value;
  }

  /**
   * Gets the value of the 'GeographyParentDetails' field.
   * @return The value of the 'GeographyParentDetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> getGeographyParentDetails() {
    return GeographyParentDetails;
  }


  /**
   * Sets the value of the 'GeographyParentDetails' field.
   * @param value the value to set.
   */
  public void setGeographyParentDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> value) {
    this.GeographyParentDetails = value;
  }

  /**
   * Gets the value of the 'GeographySubCityParentDetails' field.
   * @return The value of the 'GeographySubCityParentDetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> getGeographySubCityParentDetails() {
    return GeographySubCityParentDetails;
  }


  /**
   * Sets the value of the 'GeographySubCityParentDetails' field.
   * @param value the value to set.
   */
  public void setGeographySubCityParentDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> value) {
    this.GeographySubCityParentDetails = value;
  }

  /**
   * Gets the value of the 'GeographyBDADetails' field.
   * @return The value of the 'GeographyBDADetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> getGeographyBDADetails() {
    return GeographyBDADetails;
  }


  /**
   * Sets the value of the 'GeographyBDADetails' field.
   * @param value the value to set.
   */
  public void setGeographyBDADetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> value) {
    this.GeographyBDADetails = value;
  }

  /**
   * Gets the value of the 'GeographyBDALocationsDetails' field.
   * @return The value of the 'GeographyBDALocationsDetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> getGeographyBDALocationsDetails() {
    return GeographyBDALocationsDetails;
  }


  /**
   * Sets the value of the 'GeographyBDALocationsDetails' field.
   * @param value the value to set.
   */
  public void setGeographyBDALocationsDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> value) {
    this.GeographyBDALocationsDetails = value;
  }

  /**
   * Creates a new Geography RecordBuilder.
   * @return A new Geography RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.Geography.Builder newBuilder() {
    return new com.maersk.Geography.smds.operations.MSK.Geography.Builder();
  }

  /**
   * Creates a new Geography RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Geography RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.Geography.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.Geography.Builder other) {
    if (other == null) {
      return new com.maersk.Geography.smds.operations.MSK.Geography.Builder();
    } else {
      return new com.maersk.Geography.smds.operations.MSK.Geography.Builder(other);
    }
  }

  /**
   * Creates a new Geography RecordBuilder by copying an existing Geography instance.
   * @param other The existing instance to copy.
   * @return A new Geography RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.Geography.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.Geography other) {
    if (other == null) {
      return new com.maersk.Geography.smds.operations.MSK.Geography.Builder();
    } else {
      return new com.maersk.Geography.smds.operations.MSK.Geography.Builder(other);
    }
  }

  /**
   * RecordBuilder for Geography instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Geography>
    implements org.apache.avro.data.RecordBuilder<Geography> {

    private java.lang.String GeoRowID;
    private java.lang.String GeoType;
    private java.lang.String Name;
    private java.lang.String Status;
    private java.lang.String ValidFrom;
    private java.lang.String ValidTo;
    private java.lang.String Longitude;
    private java.lang.String Latitude;
    private java.lang.String TimeZone;
    private java.lang.String DaylightSavingTime;
    private java.lang.String UTCOffsetMinutes;
    private java.lang.String DaylightSavingStart;
    private java.lang.String DaylightSavingEnd;
    private java.lang.String DaylightSavingShiftMinutes;
    private java.lang.String Description;
    private java.lang.String WorkaroundReason;
    private java.lang.String Restricted;
    private java.lang.String SiteType;
    private java.lang.String GPSFlag;
    private java.lang.String GSMFlag;
    private java.lang.String StreetNumber;
    private java.lang.String AddressLine1;
    private java.lang.String AddressLine2;
    private java.lang.String AddressLine3;
    private java.lang.String PostalCode;
    private java.lang.String PostalCodeMandatoryFlag;
    private java.lang.String StateProvienceMandatory;
    private java.lang.String DialingCode;
    private java.lang.String DialingCodedescription;
    private java.lang.String PortFlag;
    private java.lang.String OlsonTimezone;
    private java.lang.String BDAType;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> GeographyAlternateNames;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> GeographyAlternateCodes;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> GeographyFence;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> GeographyCountryDetails;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> GeographyParentDetails;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> GeographySubCityParentDetails;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> GeographyBDADetails;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> GeographyBDALocationsDetails;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.Geography.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.GeoRowID)) {
        this.GeoRowID = data().deepCopy(fields()[0].schema(), other.GeoRowID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.GeoType)) {
        this.GeoType = data().deepCopy(fields()[1].schema(), other.GeoType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.Name)) {
        this.Name = data().deepCopy(fields()[2].schema(), other.Name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.Status)) {
        this.Status = data().deepCopy(fields()[3].schema(), other.Status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ValidFrom)) {
        this.ValidFrom = data().deepCopy(fields()[4].schema(), other.ValidFrom);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.ValidTo)) {
        this.ValidTo = data().deepCopy(fields()[5].schema(), other.ValidTo);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.Longitude)) {
        this.Longitude = data().deepCopy(fields()[6].schema(), other.Longitude);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.Latitude)) {
        this.Latitude = data().deepCopy(fields()[7].schema(), other.Latitude);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.TimeZone)) {
        this.TimeZone = data().deepCopy(fields()[8].schema(), other.TimeZone);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.DaylightSavingTime)) {
        this.DaylightSavingTime = data().deepCopy(fields()[9].schema(), other.DaylightSavingTime);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.UTCOffsetMinutes)) {
        this.UTCOffsetMinutes = data().deepCopy(fields()[10].schema(), other.UTCOffsetMinutes);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.DaylightSavingStart)) {
        this.DaylightSavingStart = data().deepCopy(fields()[11].schema(), other.DaylightSavingStart);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.DaylightSavingEnd)) {
        this.DaylightSavingEnd = data().deepCopy(fields()[12].schema(), other.DaylightSavingEnd);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.DaylightSavingShiftMinutes)) {
        this.DaylightSavingShiftMinutes = data().deepCopy(fields()[13].schema(), other.DaylightSavingShiftMinutes);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.Description)) {
        this.Description = data().deepCopy(fields()[14].schema(), other.Description);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.WorkaroundReason)) {
        this.WorkaroundReason = data().deepCopy(fields()[15].schema(), other.WorkaroundReason);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.Restricted)) {
        this.Restricted = data().deepCopy(fields()[16].schema(), other.Restricted);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.SiteType)) {
        this.SiteType = data().deepCopy(fields()[17].schema(), other.SiteType);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.GPSFlag)) {
        this.GPSFlag = data().deepCopy(fields()[18].schema(), other.GPSFlag);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.GSMFlag)) {
        this.GSMFlag = data().deepCopy(fields()[19].schema(), other.GSMFlag);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.StreetNumber)) {
        this.StreetNumber = data().deepCopy(fields()[20].schema(), other.StreetNumber);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.AddressLine1)) {
        this.AddressLine1 = data().deepCopy(fields()[21].schema(), other.AddressLine1);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.AddressLine2)) {
        this.AddressLine2 = data().deepCopy(fields()[22].schema(), other.AddressLine2);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.AddressLine3)) {
        this.AddressLine3 = data().deepCopy(fields()[23].schema(), other.AddressLine3);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.PostalCode)) {
        this.PostalCode = data().deepCopy(fields()[24].schema(), other.PostalCode);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.PostalCodeMandatoryFlag)) {
        this.PostalCodeMandatoryFlag = data().deepCopy(fields()[25].schema(), other.PostalCodeMandatoryFlag);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.StateProvienceMandatory)) {
        this.StateProvienceMandatory = data().deepCopy(fields()[26].schema(), other.StateProvienceMandatory);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.DialingCode)) {
        this.DialingCode = data().deepCopy(fields()[27].schema(), other.DialingCode);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.DialingCodedescription)) {
        this.DialingCodedescription = data().deepCopy(fields()[28].schema(), other.DialingCodedescription);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.PortFlag)) {
        this.PortFlag = data().deepCopy(fields()[29].schema(), other.PortFlag);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.OlsonTimezone)) {
        this.OlsonTimezone = data().deepCopy(fields()[30].schema(), other.OlsonTimezone);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.BDAType)) {
        this.BDAType = data().deepCopy(fields()[31].schema(), other.BDAType);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.GeographyAlternateNames)) {
        this.GeographyAlternateNames = data().deepCopy(fields()[32].schema(), other.GeographyAlternateNames);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.GeographyAlternateCodes)) {
        this.GeographyAlternateCodes = data().deepCopy(fields()[33].schema(), other.GeographyAlternateCodes);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.GeographyFence)) {
        this.GeographyFence = data().deepCopy(fields()[34].schema(), other.GeographyFence);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.GeographyCountryDetails)) {
        this.GeographyCountryDetails = data().deepCopy(fields()[35].schema(), other.GeographyCountryDetails);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.GeographyParentDetails)) {
        this.GeographyParentDetails = data().deepCopy(fields()[36].schema(), other.GeographyParentDetails);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.GeographySubCityParentDetails)) {
        this.GeographySubCityParentDetails = data().deepCopy(fields()[37].schema(), other.GeographySubCityParentDetails);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.GeographyBDADetails)) {
        this.GeographyBDADetails = data().deepCopy(fields()[38].schema(), other.GeographyBDADetails);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.GeographyBDALocationsDetails)) {
        this.GeographyBDALocationsDetails = data().deepCopy(fields()[39].schema(), other.GeographyBDALocationsDetails);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
    }

    /**
     * Creates a Builder by copying an existing Geography instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.Geography other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.GeoRowID)) {
        this.GeoRowID = data().deepCopy(fields()[0].schema(), other.GeoRowID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.GeoType)) {
        this.GeoType = data().deepCopy(fields()[1].schema(), other.GeoType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Name)) {
        this.Name = data().deepCopy(fields()[2].schema(), other.Name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Status)) {
        this.Status = data().deepCopy(fields()[3].schema(), other.Status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ValidFrom)) {
        this.ValidFrom = data().deepCopy(fields()[4].schema(), other.ValidFrom);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ValidTo)) {
        this.ValidTo = data().deepCopy(fields()[5].schema(), other.ValidTo);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Longitude)) {
        this.Longitude = data().deepCopy(fields()[6].schema(), other.Longitude);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Latitude)) {
        this.Latitude = data().deepCopy(fields()[7].schema(), other.Latitude);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.TimeZone)) {
        this.TimeZone = data().deepCopy(fields()[8].schema(), other.TimeZone);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.DaylightSavingTime)) {
        this.DaylightSavingTime = data().deepCopy(fields()[9].schema(), other.DaylightSavingTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.UTCOffsetMinutes)) {
        this.UTCOffsetMinutes = data().deepCopy(fields()[10].schema(), other.UTCOffsetMinutes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DaylightSavingStart)) {
        this.DaylightSavingStart = data().deepCopy(fields()[11].schema(), other.DaylightSavingStart);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.DaylightSavingEnd)) {
        this.DaylightSavingEnd = data().deepCopy(fields()[12].schema(), other.DaylightSavingEnd);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.DaylightSavingShiftMinutes)) {
        this.DaylightSavingShiftMinutes = data().deepCopy(fields()[13].schema(), other.DaylightSavingShiftMinutes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Description)) {
        this.Description = data().deepCopy(fields()[14].schema(), other.Description);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.WorkaroundReason)) {
        this.WorkaroundReason = data().deepCopy(fields()[15].schema(), other.WorkaroundReason);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Restricted)) {
        this.Restricted = data().deepCopy(fields()[16].schema(), other.Restricted);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.SiteType)) {
        this.SiteType = data().deepCopy(fields()[17].schema(), other.SiteType);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.GPSFlag)) {
        this.GPSFlag = data().deepCopy(fields()[18].schema(), other.GPSFlag);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.GSMFlag)) {
        this.GSMFlag = data().deepCopy(fields()[19].schema(), other.GSMFlag);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.StreetNumber)) {
        this.StreetNumber = data().deepCopy(fields()[20].schema(), other.StreetNumber);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.AddressLine1)) {
        this.AddressLine1 = data().deepCopy(fields()[21].schema(), other.AddressLine1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.AddressLine2)) {
        this.AddressLine2 = data().deepCopy(fields()[22].schema(), other.AddressLine2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.AddressLine3)) {
        this.AddressLine3 = data().deepCopy(fields()[23].schema(), other.AddressLine3);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.PostalCode)) {
        this.PostalCode = data().deepCopy(fields()[24].schema(), other.PostalCode);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.PostalCodeMandatoryFlag)) {
        this.PostalCodeMandatoryFlag = data().deepCopy(fields()[25].schema(), other.PostalCodeMandatoryFlag);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.StateProvienceMandatory)) {
        this.StateProvienceMandatory = data().deepCopy(fields()[26].schema(), other.StateProvienceMandatory);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.DialingCode)) {
        this.DialingCode = data().deepCopy(fields()[27].schema(), other.DialingCode);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DialingCodedescription)) {
        this.DialingCodedescription = data().deepCopy(fields()[28].schema(), other.DialingCodedescription);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.PortFlag)) {
        this.PortFlag = data().deepCopy(fields()[29].schema(), other.PortFlag);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.OlsonTimezone)) {
        this.OlsonTimezone = data().deepCopy(fields()[30].schema(), other.OlsonTimezone);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.BDAType)) {
        this.BDAType = data().deepCopy(fields()[31].schema(), other.BDAType);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.GeographyAlternateNames)) {
        this.GeographyAlternateNames = data().deepCopy(fields()[32].schema(), other.GeographyAlternateNames);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.GeographyAlternateCodes)) {
        this.GeographyAlternateCodes = data().deepCopy(fields()[33].schema(), other.GeographyAlternateCodes);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.GeographyFence)) {
        this.GeographyFence = data().deepCopy(fields()[34].schema(), other.GeographyFence);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.GeographyCountryDetails)) {
        this.GeographyCountryDetails = data().deepCopy(fields()[35].schema(), other.GeographyCountryDetails);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.GeographyParentDetails)) {
        this.GeographyParentDetails = data().deepCopy(fields()[36].schema(), other.GeographyParentDetails);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.GeographySubCityParentDetails)) {
        this.GeographySubCityParentDetails = data().deepCopy(fields()[37].schema(), other.GeographySubCityParentDetails);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.GeographyBDADetails)) {
        this.GeographyBDADetails = data().deepCopy(fields()[38].schema(), other.GeographyBDADetails);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.GeographyBDALocationsDetails)) {
        this.GeographyBDALocationsDetails = data().deepCopy(fields()[39].schema(), other.GeographyBDALocationsDetails);
        fieldSetFlags()[39] = true;
      }
    }

    /**
      * Gets the value of the 'GeoRowID' field.
      * @return The value.
      */
    public java.lang.String getGeoRowID() {
      return GeoRowID;
    }


    /**
      * Sets the value of the 'GeoRowID' field.
      * @param value The value of 'GeoRowID'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeoRowID(java.lang.String value) {
      validate(fields()[0], value);
      this.GeoRowID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'GeoRowID' field has been set.
      * @return True if the 'GeoRowID' field has been set, false otherwise.
      */
    public boolean hasGeoRowID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'GeoRowID' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeoRowID() {
      GeoRowID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeoType' field.
      * @return The value.
      */
    public java.lang.String getGeoType() {
      return GeoType;
    }


    /**
      * Sets the value of the 'GeoType' field.
      * @param value The value of 'GeoType'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeoType(java.lang.String value) {
      validate(fields()[1], value);
      this.GeoType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'GeoType' field has been set.
      * @return True if the 'GeoType' field has been set, false otherwise.
      */
    public boolean hasGeoType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'GeoType' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeoType() {
      GeoType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return Name;
    }


    /**
      * Sets the value of the 'Name' field.
      * @param value The value of 'Name'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.Name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Name' field has been set.
      * @return True if the 'Name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Name' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearName() {
      Name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return Status;
    }


    /**
      * Sets the value of the 'Status' field.
      * @param value The value of 'Status'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setStatus(java.lang.String value) {
      validate(fields()[3], value);
      this.Status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Status' field has been set.
      * @return True if the 'Status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Status' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearStatus() {
      Status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ValidFrom' field.
      * @return The value.
      */
    public java.lang.String getValidFrom() {
      return ValidFrom;
    }


    /**
      * Sets the value of the 'ValidFrom' field.
      * @param value The value of 'ValidFrom'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setValidFrom(java.lang.String value) {
      validate(fields()[4], value);
      this.ValidFrom = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ValidFrom' field has been set.
      * @return True if the 'ValidFrom' field has been set, false otherwise.
      */
    public boolean hasValidFrom() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ValidFrom' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearValidFrom() {
      ValidFrom = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ValidTo' field.
      * @return The value.
      */
    public java.lang.String getValidTo() {
      return ValidTo;
    }


    /**
      * Sets the value of the 'ValidTo' field.
      * @param value The value of 'ValidTo'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setValidTo(java.lang.String value) {
      validate(fields()[5], value);
      this.ValidTo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ValidTo' field has been set.
      * @return True if the 'ValidTo' field has been set, false otherwise.
      */
    public boolean hasValidTo() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ValidTo' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearValidTo() {
      ValidTo = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'Longitude' field.
      * @return The value.
      */
    public java.lang.String getLongitude() {
      return Longitude;
    }


    /**
      * Sets the value of the 'Longitude' field.
      * @param value The value of 'Longitude'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setLongitude(java.lang.String value) {
      validate(fields()[6], value);
      this.Longitude = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'Longitude' field has been set.
      * @return True if the 'Longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'Longitude' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearLongitude() {
      Longitude = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Latitude' field.
      * @return The value.
      */
    public java.lang.String getLatitude() {
      return Latitude;
    }


    /**
      * Sets the value of the 'Latitude' field.
      * @param value The value of 'Latitude'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setLatitude(java.lang.String value) {
      validate(fields()[7], value);
      this.Latitude = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Latitude' field has been set.
      * @return True if the 'Latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Latitude' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearLatitude() {
      Latitude = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeZone' field.
      * @return The value.
      */
    public java.lang.String getTimeZone() {
      return TimeZone;
    }


    /**
      * Sets the value of the 'TimeZone' field.
      * @param value The value of 'TimeZone'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setTimeZone(java.lang.String value) {
      validate(fields()[8], value);
      this.TimeZone = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeZone' field has been set.
      * @return True if the 'TimeZone' field has been set, false otherwise.
      */
    public boolean hasTimeZone() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'TimeZone' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearTimeZone() {
      TimeZone = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'DaylightSavingTime' field.
      * @return The value.
      */
    public java.lang.String getDaylightSavingTime() {
      return DaylightSavingTime;
    }


    /**
      * Sets the value of the 'DaylightSavingTime' field.
      * @param value The value of 'DaylightSavingTime'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDaylightSavingTime(java.lang.String value) {
      validate(fields()[9], value);
      this.DaylightSavingTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'DaylightSavingTime' field has been set.
      * @return True if the 'DaylightSavingTime' field has been set, false otherwise.
      */
    public boolean hasDaylightSavingTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'DaylightSavingTime' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDaylightSavingTime() {
      DaylightSavingTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'UTCOffsetMinutes' field.
      * @return The value.
      */
    public java.lang.String getUTCOffsetMinutes() {
      return UTCOffsetMinutes;
    }


    /**
      * Sets the value of the 'UTCOffsetMinutes' field.
      * @param value The value of 'UTCOffsetMinutes'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setUTCOffsetMinutes(java.lang.String value) {
      validate(fields()[10], value);
      this.UTCOffsetMinutes = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'UTCOffsetMinutes' field has been set.
      * @return True if the 'UTCOffsetMinutes' field has been set, false otherwise.
      */
    public boolean hasUTCOffsetMinutes() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'UTCOffsetMinutes' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearUTCOffsetMinutes() {
      UTCOffsetMinutes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'DaylightSavingStart' field.
      * @return The value.
      */
    public java.lang.String getDaylightSavingStart() {
      return DaylightSavingStart;
    }


    /**
      * Sets the value of the 'DaylightSavingStart' field.
      * @param value The value of 'DaylightSavingStart'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDaylightSavingStart(java.lang.String value) {
      validate(fields()[11], value);
      this.DaylightSavingStart = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'DaylightSavingStart' field has been set.
      * @return True if the 'DaylightSavingStart' field has been set, false otherwise.
      */
    public boolean hasDaylightSavingStart() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'DaylightSavingStart' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDaylightSavingStart() {
      DaylightSavingStart = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'DaylightSavingEnd' field.
      * @return The value.
      */
    public java.lang.String getDaylightSavingEnd() {
      return DaylightSavingEnd;
    }


    /**
      * Sets the value of the 'DaylightSavingEnd' field.
      * @param value The value of 'DaylightSavingEnd'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDaylightSavingEnd(java.lang.String value) {
      validate(fields()[12], value);
      this.DaylightSavingEnd = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'DaylightSavingEnd' field has been set.
      * @return True if the 'DaylightSavingEnd' field has been set, false otherwise.
      */
    public boolean hasDaylightSavingEnd() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'DaylightSavingEnd' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDaylightSavingEnd() {
      DaylightSavingEnd = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'DaylightSavingShiftMinutes' field.
      * @return The value.
      */
    public java.lang.String getDaylightSavingShiftMinutes() {
      return DaylightSavingShiftMinutes;
    }


    /**
      * Sets the value of the 'DaylightSavingShiftMinutes' field.
      * @param value The value of 'DaylightSavingShiftMinutes'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDaylightSavingShiftMinutes(java.lang.String value) {
      validate(fields()[13], value);
      this.DaylightSavingShiftMinutes = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'DaylightSavingShiftMinutes' field has been set.
      * @return True if the 'DaylightSavingShiftMinutes' field has been set, false otherwise.
      */
    public boolean hasDaylightSavingShiftMinutes() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'DaylightSavingShiftMinutes' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDaylightSavingShiftMinutes() {
      DaylightSavingShiftMinutes = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return Description;
    }


    /**
      * Sets the value of the 'Description' field.
      * @param value The value of 'Description'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDescription(java.lang.String value) {
      validate(fields()[14], value);
      this.Description = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Description' field has been set.
      * @return True if the 'Description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Description' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDescription() {
      Description = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'WorkaroundReason' field.
      * @return The value.
      */
    public java.lang.String getWorkaroundReason() {
      return WorkaroundReason;
    }


    /**
      * Sets the value of the 'WorkaroundReason' field.
      * @param value The value of 'WorkaroundReason'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setWorkaroundReason(java.lang.String value) {
      validate(fields()[15], value);
      this.WorkaroundReason = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'WorkaroundReason' field has been set.
      * @return True if the 'WorkaroundReason' field has been set, false otherwise.
      */
    public boolean hasWorkaroundReason() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'WorkaroundReason' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearWorkaroundReason() {
      WorkaroundReason = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'Restricted' field.
      * @return The value.
      */
    public java.lang.String getRestricted() {
      return Restricted;
    }


    /**
      * Sets the value of the 'Restricted' field.
      * @param value The value of 'Restricted'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setRestricted(java.lang.String value) {
      validate(fields()[16], value);
      this.Restricted = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'Restricted' field has been set.
      * @return True if the 'Restricted' field has been set, false otherwise.
      */
    public boolean hasRestricted() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'Restricted' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearRestricted() {
      Restricted = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'SiteType' field.
      * @return The value.
      */
    public java.lang.String getSiteType() {
      return SiteType;
    }


    /**
      * Sets the value of the 'SiteType' field.
      * @param value The value of 'SiteType'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setSiteType(java.lang.String value) {
      validate(fields()[17], value);
      this.SiteType = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'SiteType' field has been set.
      * @return True if the 'SiteType' field has been set, false otherwise.
      */
    public boolean hasSiteType() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'SiteType' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearSiteType() {
      SiteType = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'GPSFlag' field.
      * @return The value.
      */
    public java.lang.String getGPSFlag() {
      return GPSFlag;
    }


    /**
      * Sets the value of the 'GPSFlag' field.
      * @param value The value of 'GPSFlag'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGPSFlag(java.lang.String value) {
      validate(fields()[18], value);
      this.GPSFlag = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'GPSFlag' field has been set.
      * @return True if the 'GPSFlag' field has been set, false otherwise.
      */
    public boolean hasGPSFlag() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'GPSFlag' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGPSFlag() {
      GPSFlag = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'GSMFlag' field.
      * @return The value.
      */
    public java.lang.String getGSMFlag() {
      return GSMFlag;
    }


    /**
      * Sets the value of the 'GSMFlag' field.
      * @param value The value of 'GSMFlag'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGSMFlag(java.lang.String value) {
      validate(fields()[19], value);
      this.GSMFlag = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'GSMFlag' field has been set.
      * @return True if the 'GSMFlag' field has been set, false otherwise.
      */
    public boolean hasGSMFlag() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'GSMFlag' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGSMFlag() {
      GSMFlag = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'StreetNumber' field.
      * @return The value.
      */
    public java.lang.String getStreetNumber() {
      return StreetNumber;
    }


    /**
      * Sets the value of the 'StreetNumber' field.
      * @param value The value of 'StreetNumber'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setStreetNumber(java.lang.String value) {
      validate(fields()[20], value);
      this.StreetNumber = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'StreetNumber' field has been set.
      * @return True if the 'StreetNumber' field has been set, false otherwise.
      */
    public boolean hasStreetNumber() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'StreetNumber' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearStreetNumber() {
      StreetNumber = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'AddressLine1' field.
      * @return The value.
      */
    public java.lang.String getAddressLine1() {
      return AddressLine1;
    }


    /**
      * Sets the value of the 'AddressLine1' field.
      * @param value The value of 'AddressLine1'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setAddressLine1(java.lang.String value) {
      validate(fields()[21], value);
      this.AddressLine1 = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'AddressLine1' field has been set.
      * @return True if the 'AddressLine1' field has been set, false otherwise.
      */
    public boolean hasAddressLine1() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'AddressLine1' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearAddressLine1() {
      AddressLine1 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'AddressLine2' field.
      * @return The value.
      */
    public java.lang.String getAddressLine2() {
      return AddressLine2;
    }


    /**
      * Sets the value of the 'AddressLine2' field.
      * @param value The value of 'AddressLine2'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setAddressLine2(java.lang.String value) {
      validate(fields()[22], value);
      this.AddressLine2 = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'AddressLine2' field has been set.
      * @return True if the 'AddressLine2' field has been set, false otherwise.
      */
    public boolean hasAddressLine2() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'AddressLine2' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearAddressLine2() {
      AddressLine2 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'AddressLine3' field.
      * @return The value.
      */
    public java.lang.String getAddressLine3() {
      return AddressLine3;
    }


    /**
      * Sets the value of the 'AddressLine3' field.
      * @param value The value of 'AddressLine3'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setAddressLine3(java.lang.String value) {
      validate(fields()[23], value);
      this.AddressLine3 = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'AddressLine3' field has been set.
      * @return True if the 'AddressLine3' field has been set, false otherwise.
      */
    public boolean hasAddressLine3() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'AddressLine3' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearAddressLine3() {
      AddressLine3 = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'PostalCode' field.
      * @return The value.
      */
    public java.lang.String getPostalCode() {
      return PostalCode;
    }


    /**
      * Sets the value of the 'PostalCode' field.
      * @param value The value of 'PostalCode'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setPostalCode(java.lang.String value) {
      validate(fields()[24], value);
      this.PostalCode = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'PostalCode' field has been set.
      * @return True if the 'PostalCode' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'PostalCode' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearPostalCode() {
      PostalCode = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'PostalCodeMandatoryFlag' field.
      * @return The value.
      */
    public java.lang.String getPostalCodeMandatoryFlag() {
      return PostalCodeMandatoryFlag;
    }


    /**
      * Sets the value of the 'PostalCodeMandatoryFlag' field.
      * @param value The value of 'PostalCodeMandatoryFlag'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setPostalCodeMandatoryFlag(java.lang.String value) {
      validate(fields()[25], value);
      this.PostalCodeMandatoryFlag = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'PostalCodeMandatoryFlag' field has been set.
      * @return True if the 'PostalCodeMandatoryFlag' field has been set, false otherwise.
      */
    public boolean hasPostalCodeMandatoryFlag() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'PostalCodeMandatoryFlag' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearPostalCodeMandatoryFlag() {
      PostalCodeMandatoryFlag = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'StateProvienceMandatory' field.
      * @return The value.
      */
    public java.lang.String getStateProvienceMandatory() {
      return StateProvienceMandatory;
    }


    /**
      * Sets the value of the 'StateProvienceMandatory' field.
      * @param value The value of 'StateProvienceMandatory'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setStateProvienceMandatory(java.lang.String value) {
      validate(fields()[26], value);
      this.StateProvienceMandatory = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'StateProvienceMandatory' field has been set.
      * @return True if the 'StateProvienceMandatory' field has been set, false otherwise.
      */
    public boolean hasStateProvienceMandatory() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'StateProvienceMandatory' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearStateProvienceMandatory() {
      StateProvienceMandatory = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'DialingCode' field.
      * @return The value.
      */
    public java.lang.String getDialingCode() {
      return DialingCode;
    }


    /**
      * Sets the value of the 'DialingCode' field.
      * @param value The value of 'DialingCode'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDialingCode(java.lang.String value) {
      validate(fields()[27], value);
      this.DialingCode = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'DialingCode' field has been set.
      * @return True if the 'DialingCode' field has been set, false otherwise.
      */
    public boolean hasDialingCode() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'DialingCode' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDialingCode() {
      DialingCode = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'DialingCodedescription' field.
      * @return The value.
      */
    public java.lang.String getDialingCodedescription() {
      return DialingCodedescription;
    }


    /**
      * Sets the value of the 'DialingCodedescription' field.
      * @param value The value of 'DialingCodedescription'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setDialingCodedescription(java.lang.String value) {
      validate(fields()[28], value);
      this.DialingCodedescription = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'DialingCodedescription' field has been set.
      * @return True if the 'DialingCodedescription' field has been set, false otherwise.
      */
    public boolean hasDialingCodedescription() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'DialingCodedescription' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearDialingCodedescription() {
      DialingCodedescription = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'PortFlag' field.
      * @return The value.
      */
    public java.lang.String getPortFlag() {
      return PortFlag;
    }


    /**
      * Sets the value of the 'PortFlag' field.
      * @param value The value of 'PortFlag'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setPortFlag(java.lang.String value) {
      validate(fields()[29], value);
      this.PortFlag = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'PortFlag' field has been set.
      * @return True if the 'PortFlag' field has been set, false otherwise.
      */
    public boolean hasPortFlag() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'PortFlag' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearPortFlag() {
      PortFlag = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'OlsonTimezone' field.
      * @return The value.
      */
    public java.lang.String getOlsonTimezone() {
      return OlsonTimezone;
    }


    /**
      * Sets the value of the 'OlsonTimezone' field.
      * @param value The value of 'OlsonTimezone'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setOlsonTimezone(java.lang.String value) {
      validate(fields()[30], value);
      this.OlsonTimezone = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'OlsonTimezone' field has been set.
      * @return True if the 'OlsonTimezone' field has been set, false otherwise.
      */
    public boolean hasOlsonTimezone() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'OlsonTimezone' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearOlsonTimezone() {
      OlsonTimezone = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'BDAType' field.
      * @return The value.
      */
    public java.lang.String getBDAType() {
      return BDAType;
    }


    /**
      * Sets the value of the 'BDAType' field.
      * @param value The value of 'BDAType'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setBDAType(java.lang.String value) {
      validate(fields()[31], value);
      this.BDAType = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'BDAType' field has been set.
      * @return True if the 'BDAType' field has been set, false otherwise.
      */
    public boolean hasBDAType() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'BDAType' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearBDAType() {
      BDAType = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyAlternateNames' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> getGeographyAlternateNames() {
      return GeographyAlternateNames;
    }


    /**
      * Sets the value of the 'GeographyAlternateNames' field.
      * @param value The value of 'GeographyAlternateNames'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyAlternateNames(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> value) {
      validate(fields()[32], value);
      this.GeographyAlternateNames = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyAlternateNames' field has been set.
      * @return True if the 'GeographyAlternateNames' field has been set, false otherwise.
      */
    public boolean hasGeographyAlternateNames() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'GeographyAlternateNames' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyAlternateNames() {
      GeographyAlternateNames = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyAlternateCodes' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> getGeographyAlternateCodes() {
      return GeographyAlternateCodes;
    }


    /**
      * Sets the value of the 'GeographyAlternateCodes' field.
      * @param value The value of 'GeographyAlternateCodes'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyAlternateCodes(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> value) {
      validate(fields()[33], value);
      this.GeographyAlternateCodes = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyAlternateCodes' field has been set.
      * @return True if the 'GeographyAlternateCodes' field has been set, false otherwise.
      */
    public boolean hasGeographyAlternateCodes() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'GeographyAlternateCodes' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyAlternateCodes() {
      GeographyAlternateCodes = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyFence' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> getGeographyFence() {
      return GeographyFence;
    }


    /**
      * Sets the value of the 'GeographyFence' field.
      * @param value The value of 'GeographyFence'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyFence(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> value) {
      validate(fields()[34], value);
      this.GeographyFence = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyFence' field has been set.
      * @return True if the 'GeographyFence' field has been set, false otherwise.
      */
    public boolean hasGeographyFence() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'GeographyFence' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyFence() {
      GeographyFence = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyCountryDetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> getGeographyCountryDetails() {
      return GeographyCountryDetails;
    }


    /**
      * Sets the value of the 'GeographyCountryDetails' field.
      * @param value The value of 'GeographyCountryDetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyCountryDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> value) {
      validate(fields()[35], value);
      this.GeographyCountryDetails = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyCountryDetails' field has been set.
      * @return True if the 'GeographyCountryDetails' field has been set, false otherwise.
      */
    public boolean hasGeographyCountryDetails() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'GeographyCountryDetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyCountryDetails() {
      GeographyCountryDetails = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyParentDetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> getGeographyParentDetails() {
      return GeographyParentDetails;
    }


    /**
      * Sets the value of the 'GeographyParentDetails' field.
      * @param value The value of 'GeographyParentDetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyParentDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> value) {
      validate(fields()[36], value);
      this.GeographyParentDetails = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyParentDetails' field has been set.
      * @return True if the 'GeographyParentDetails' field has been set, false otherwise.
      */
    public boolean hasGeographyParentDetails() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'GeographyParentDetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyParentDetails() {
      GeographyParentDetails = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographySubCityParentDetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> getGeographySubCityParentDetails() {
      return GeographySubCityParentDetails;
    }


    /**
      * Sets the value of the 'GeographySubCityParentDetails' field.
      * @param value The value of 'GeographySubCityParentDetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographySubCityParentDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> value) {
      validate(fields()[37], value);
      this.GeographySubCityParentDetails = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographySubCityParentDetails' field has been set.
      * @return True if the 'GeographySubCityParentDetails' field has been set, false otherwise.
      */
    public boolean hasGeographySubCityParentDetails() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'GeographySubCityParentDetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographySubCityParentDetails() {
      GeographySubCityParentDetails = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyBDADetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> getGeographyBDADetails() {
      return GeographyBDADetails;
    }


    /**
      * Sets the value of the 'GeographyBDADetails' field.
      * @param value The value of 'GeographyBDADetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyBDADetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> value) {
      validate(fields()[38], value);
      this.GeographyBDADetails = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyBDADetails' field has been set.
      * @return True if the 'GeographyBDADetails' field has been set, false otherwise.
      */
    public boolean hasGeographyBDADetails() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'GeographyBDADetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyBDADetails() {
      GeographyBDADetails = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyBDALocationsDetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> getGeographyBDALocationsDetails() {
      return GeographyBDALocationsDetails;
    }


    /**
      * Sets the value of the 'GeographyBDALocationsDetails' field.
      * @param value The value of 'GeographyBDALocationsDetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder setGeographyBDALocationsDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> value) {
      validate(fields()[39], value);
      this.GeographyBDALocationsDetails = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyBDALocationsDetails' field has been set.
      * @return True if the 'GeographyBDALocationsDetails' field has been set, false otherwise.
      */
    public boolean hasGeographyBDALocationsDetails() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'GeographyBDALocationsDetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.Geography.Builder clearGeographyBDALocationsDetails() {
      GeographyBDALocationsDetails = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Geography build() {
      try {
        Geography record = new Geography();
        record.GeoRowID = fieldSetFlags()[0] ? this.GeoRowID : (java.lang.String) defaultValue(fields()[0]);
        record.GeoType = fieldSetFlags()[1] ? this.GeoType : (java.lang.String) defaultValue(fields()[1]);
        record.Name = fieldSetFlags()[2] ? this.Name : (java.lang.String) defaultValue(fields()[2]);
        record.Status = fieldSetFlags()[3] ? this.Status : (java.lang.String) defaultValue(fields()[3]);
        record.ValidFrom = fieldSetFlags()[4] ? this.ValidFrom : (java.lang.String) defaultValue(fields()[4]);
        record.ValidTo = fieldSetFlags()[5] ? this.ValidTo : (java.lang.String) defaultValue(fields()[5]);
        record.Longitude = fieldSetFlags()[6] ? this.Longitude : (java.lang.String) defaultValue(fields()[6]);
        record.Latitude = fieldSetFlags()[7] ? this.Latitude : (java.lang.String) defaultValue(fields()[7]);
        record.TimeZone = fieldSetFlags()[8] ? this.TimeZone : (java.lang.String) defaultValue(fields()[8]);
        record.DaylightSavingTime = fieldSetFlags()[9] ? this.DaylightSavingTime : (java.lang.String) defaultValue(fields()[9]);
        record.UTCOffsetMinutes = fieldSetFlags()[10] ? this.UTCOffsetMinutes : (java.lang.String) defaultValue(fields()[10]);
        record.DaylightSavingStart = fieldSetFlags()[11] ? this.DaylightSavingStart : (java.lang.String) defaultValue(fields()[11]);
        record.DaylightSavingEnd = fieldSetFlags()[12] ? this.DaylightSavingEnd : (java.lang.String) defaultValue(fields()[12]);
        record.DaylightSavingShiftMinutes = fieldSetFlags()[13] ? this.DaylightSavingShiftMinutes : (java.lang.String) defaultValue(fields()[13]);
        record.Description = fieldSetFlags()[14] ? this.Description : (java.lang.String) defaultValue(fields()[14]);
        record.WorkaroundReason = fieldSetFlags()[15] ? this.WorkaroundReason : (java.lang.String) defaultValue(fields()[15]);
        record.Restricted = fieldSetFlags()[16] ? this.Restricted : (java.lang.String) defaultValue(fields()[16]);
        record.SiteType = fieldSetFlags()[17] ? this.SiteType : (java.lang.String) defaultValue(fields()[17]);
        record.GPSFlag = fieldSetFlags()[18] ? this.GPSFlag : (java.lang.String) defaultValue(fields()[18]);
        record.GSMFlag = fieldSetFlags()[19] ? this.GSMFlag : (java.lang.String) defaultValue(fields()[19]);
        record.StreetNumber = fieldSetFlags()[20] ? this.StreetNumber : (java.lang.String) defaultValue(fields()[20]);
        record.AddressLine1 = fieldSetFlags()[21] ? this.AddressLine1 : (java.lang.String) defaultValue(fields()[21]);
        record.AddressLine2 = fieldSetFlags()[22] ? this.AddressLine2 : (java.lang.String) defaultValue(fields()[22]);
        record.AddressLine3 = fieldSetFlags()[23] ? this.AddressLine3 : (java.lang.String) defaultValue(fields()[23]);
        record.PostalCode = fieldSetFlags()[24] ? this.PostalCode : (java.lang.String) defaultValue(fields()[24]);
        record.PostalCodeMandatoryFlag = fieldSetFlags()[25] ? this.PostalCodeMandatoryFlag : (java.lang.String) defaultValue(fields()[25]);
        record.StateProvienceMandatory = fieldSetFlags()[26] ? this.StateProvienceMandatory : (java.lang.String) defaultValue(fields()[26]);
        record.DialingCode = fieldSetFlags()[27] ? this.DialingCode : (java.lang.String) defaultValue(fields()[27]);
        record.DialingCodedescription = fieldSetFlags()[28] ? this.DialingCodedescription : (java.lang.String) defaultValue(fields()[28]);
        record.PortFlag = fieldSetFlags()[29] ? this.PortFlag : (java.lang.String) defaultValue(fields()[29]);
        record.OlsonTimezone = fieldSetFlags()[30] ? this.OlsonTimezone : (java.lang.String) defaultValue(fields()[30]);
        record.BDAType = fieldSetFlags()[31] ? this.BDAType : (java.lang.String) defaultValue(fields()[31]);
        record.GeographyAlternateNames = fieldSetFlags()[32] ? this.GeographyAlternateNames : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>) defaultValue(fields()[32]);
        record.GeographyAlternateCodes = fieldSetFlags()[33] ? this.GeographyAlternateCodes : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>) defaultValue(fields()[33]);
        record.GeographyFence = fieldSetFlags()[34] ? this.GeographyFence : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence>) defaultValue(fields()[34]);
        record.GeographyCountryDetails = fieldSetFlags()[35] ? this.GeographyCountryDetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>) defaultValue(fields()[35]);
        record.GeographyParentDetails = fieldSetFlags()[36] ? this.GeographyParentDetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>) defaultValue(fields()[36]);
        record.GeographySubCityParentDetails = fieldSetFlags()[37] ? this.GeographySubCityParentDetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>) defaultValue(fields()[37]);
        record.GeographyBDADetails = fieldSetFlags()[38] ? this.GeographyBDADetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>) defaultValue(fields()[38]);
        record.GeographyBDALocationsDetails = fieldSetFlags()[39] ? this.GeographyBDALocationsDetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>) defaultValue(fields()[39]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Geography>
    WRITER$ = (org.apache.avro.io.DatumWriter<Geography>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Geography>
    READER$ = (org.apache.avro.io.DatumReader<Geography>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.GeoRowID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GeoRowID);
    }

    if (this.GeoType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GeoType);
    }

    if (this.Name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Name);
    }

    if (this.Status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Status);
    }

    if (this.ValidFrom == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ValidFrom);
    }

    if (this.ValidTo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ValidTo);
    }

    if (this.Longitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Longitude);
    }

    if (this.Latitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Latitude);
    }

    if (this.TimeZone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.TimeZone);
    }

    if (this.DaylightSavingTime == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DaylightSavingTime);
    }

    if (this.UTCOffsetMinutes == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.UTCOffsetMinutes);
    }

    if (this.DaylightSavingStart == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DaylightSavingStart);
    }

    if (this.DaylightSavingEnd == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DaylightSavingEnd);
    }

    if (this.DaylightSavingShiftMinutes == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DaylightSavingShiftMinutes);
    }

    if (this.Description == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Description);
    }

    if (this.WorkaroundReason == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.WorkaroundReason);
    }

    if (this.Restricted == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.Restricted);
    }

    if (this.SiteType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SiteType);
    }

    if (this.GPSFlag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GPSFlag);
    }

    if (this.GSMFlag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.GSMFlag);
    }

    if (this.StreetNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.StreetNumber);
    }

    if (this.AddressLine1 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.AddressLine1);
    }

    if (this.AddressLine2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.AddressLine2);
    }

    if (this.AddressLine3 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.AddressLine3);
    }

    if (this.PostalCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PostalCode);
    }

    if (this.PostalCodeMandatoryFlag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PostalCodeMandatoryFlag);
    }

    if (this.StateProvienceMandatory == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.StateProvienceMandatory);
    }

    if (this.DialingCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DialingCode);
    }

    if (this.DialingCodedescription == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DialingCodedescription);
    }

    if (this.PortFlag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PortFlag);
    }

    if (this.OlsonTimezone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.OlsonTimezone);
    }

    if (this.BDAType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.BDAType);
    }

    if (this.GeographyAlternateNames == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.GeographyAlternateNames.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames e0: this.GeographyAlternateNames) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    long size1 = this.GeographyAlternateCodes.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes e1: this.GeographyAlternateCodes) {
      actualSize1++;
      out.startItem();
      e1.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    if (this.GeographyFence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.GeographyFence.size();
      out.writeArrayStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyFence e2: this.GeographyFence) {
        actualSize2++;
        out.startItem();
        e2.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize2 != size2)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

    if (this.GeographyCountryDetails == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size3 = this.GeographyCountryDetails.size();
      out.writeArrayStart();
      out.setItemCount(size3);
      long actualSize3 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails e3: this.GeographyCountryDetails) {
        actualSize3++;
        out.startItem();
        e3.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize3 != size3)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");
    }

    if (this.GeographyParentDetails == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size4 = this.GeographyParentDetails.size();
      out.writeArrayStart();
      out.setItemCount(size4);
      long actualSize4 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyParentDetails e4: this.GeographyParentDetails) {
        actualSize4++;
        out.startItem();
        e4.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize4 != size4)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size4 + ", but element count was " + actualSize4 + ".");
    }

    if (this.GeographySubCityParentDetails == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size5 = this.GeographySubCityParentDetails.size();
      out.writeArrayStart();
      out.setItemCount(size5);
      long actualSize5 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails e5: this.GeographySubCityParentDetails) {
        actualSize5++;
        out.startItem();
        e5.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize5 != size5)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size5 + ", but element count was " + actualSize5 + ".");
    }

    if (this.GeographyBDADetails == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size6 = this.GeographyBDADetails.size();
      out.writeArrayStart();
      out.setItemCount(size6);
      long actualSize6 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyBDADetails e6: this.GeographyBDADetails) {
        actualSize6++;
        out.startItem();
        e6.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize6 != size6)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size6 + ", but element count was " + actualSize6 + ".");
    }

    if (this.GeographyBDALocationsDetails == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size7 = this.GeographyBDALocationsDetails.size();
      out.writeArrayStart();
      out.setItemCount(size7);
      long actualSize7 = 0;
      for (com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails e7: this.GeographyBDALocationsDetails) {
        actualSize7++;
        out.startItem();
        e7.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize7 != size7)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size7 + ", but element count was " + actualSize7 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.GeoRowID = null;
      } else {
        this.GeoRowID = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeoType = null;
      } else {
        this.GeoType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Name = null;
      } else {
        this.Name = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Status = null;
      } else {
        this.Status = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ValidFrom = null;
      } else {
        this.ValidFrom = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ValidTo = null;
      } else {
        this.ValidTo = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Longitude = null;
      } else {
        this.Longitude = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Latitude = null;
      } else {
        this.Latitude = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TimeZone = null;
      } else {
        this.TimeZone = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DaylightSavingTime = null;
      } else {
        this.DaylightSavingTime = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.UTCOffsetMinutes = null;
      } else {
        this.UTCOffsetMinutes = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DaylightSavingStart = null;
      } else {
        this.DaylightSavingStart = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DaylightSavingEnd = null;
      } else {
        this.DaylightSavingEnd = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DaylightSavingShiftMinutes = null;
      } else {
        this.DaylightSavingShiftMinutes = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Description = null;
      } else {
        this.Description = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.WorkaroundReason = null;
      } else {
        this.WorkaroundReason = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.Restricted = null;
      } else {
        this.Restricted = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SiteType = null;
      } else {
        this.SiteType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GPSFlag = null;
      } else {
        this.GPSFlag = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GSMFlag = null;
      } else {
        this.GSMFlag = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.StreetNumber = null;
      } else {
        this.StreetNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.AddressLine1 = null;
      } else {
        this.AddressLine1 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.AddressLine2 = null;
      } else {
        this.AddressLine2 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.AddressLine3 = null;
      } else {
        this.AddressLine3 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PostalCode = null;
      } else {
        this.PostalCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PostalCodeMandatoryFlag = null;
      } else {
        this.PostalCodeMandatoryFlag = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.StateProvienceMandatory = null;
      } else {
        this.StateProvienceMandatory = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DialingCode = null;
      } else {
        this.DialingCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DialingCodedescription = null;
      } else {
        this.DialingCodedescription = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PortFlag = null;
      } else {
        this.PortFlag = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.OlsonTimezone = null;
      } else {
        this.OlsonTimezone = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.BDAType = null;
      } else {
        this.BDAType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyAlternateNames = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> a0 = this.GeographyAlternateNames;
        if (a0 == null) {
          a0 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>((int)size0, SCHEMA$.getField("GeographyAlternateNames").schema().getTypes().get(1));
          this.GeographyAlternateNames = a0;
        } else a0.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> a1 = this.GeographyAlternateCodes;
      if (a1 == null) {
        a1 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>((int)size1, SCHEMA$.getField("GeographyAlternateCodes").schema());
        this.GeographyAlternateCodes = a1;
      } else a1.clear();
      SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes e1 = (ga1 != null ? ga1.peek() : null);
          if (e1 == null) {
            e1 = new com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes();
          }
          e1.customDecode(in);
          a1.add(e1);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyFence = null;
      } else {
        long size2 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> a2 = this.GeographyFence;
        if (a2 == null) {
          a2 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence>((int)size2, SCHEMA$.getField("GeographyFence").schema().getTypes().get(1));
          this.GeographyFence = a2;
        } else a2.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence>)a2 : null);
        for ( ; 0 < size2; size2 = in.arrayNext()) {
          for ( ; size2 != 0; size2--) {
            com.maersk.Geography.smds.operations.MSK.GeographyFence e2 = (ga2 != null ? ga2.peek() : null);
            if (e2 == null) {
              e2 = new com.maersk.Geography.smds.operations.MSK.GeographyFence();
            }
            e2.customDecode(in);
            a2.add(e2);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyCountryDetails = null;
      } else {
        long size3 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> a3 = this.GeographyCountryDetails;
        if (a3 == null) {
          a3 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>((int)size3, SCHEMA$.getField("GeographyCountryDetails").schema().getTypes().get(1));
          this.GeographyCountryDetails = a3;
        } else a3.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>)a3 : null);
        for ( ; 0 < size3; size3 = in.arrayNext()) {
          for ( ; size3 != 0; size3--) {
            com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails e3 = (ga3 != null ? ga3.peek() : null);
            if (e3 == null) {
              e3 = new com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails();
            }
            e3.customDecode(in);
            a3.add(e3);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyParentDetails = null;
      } else {
        long size4 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> a4 = this.GeographyParentDetails;
        if (a4 == null) {
          a4 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>((int)size4, SCHEMA$.getField("GeographyParentDetails").schema().getTypes().get(1));
          this.GeographyParentDetails = a4;
        } else a4.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>)a4 : null);
        for ( ; 0 < size4; size4 = in.arrayNext()) {
          for ( ; size4 != 0; size4--) {
            com.maersk.Geography.smds.operations.MSK.GeographyParentDetails e4 = (ga4 != null ? ga4.peek() : null);
            if (e4 == null) {
              e4 = new com.maersk.Geography.smds.operations.MSK.GeographyParentDetails();
            }
            e4.customDecode(in);
            a4.add(e4);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographySubCityParentDetails = null;
      } else {
        long size5 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> a5 = this.GeographySubCityParentDetails;
        if (a5 == null) {
          a5 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>((int)size5, SCHEMA$.getField("GeographySubCityParentDetails").schema().getTypes().get(1));
          this.GeographySubCityParentDetails = a5;
        } else a5.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>)a5 : null);
        for ( ; 0 < size5; size5 = in.arrayNext()) {
          for ( ; size5 != 0; size5--) {
            com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails e5 = (ga5 != null ? ga5.peek() : null);
            if (e5 == null) {
              e5 = new com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails();
            }
            e5.customDecode(in);
            a5.add(e5);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyBDADetails = null;
      } else {
        long size6 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> a6 = this.GeographyBDADetails;
        if (a6 == null) {
          a6 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>((int)size6, SCHEMA$.getField("GeographyBDADetails").schema().getTypes().get(1));
          this.GeographyBDADetails = a6;
        } else a6.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>)a6 : null);
        for ( ; 0 < size6; size6 = in.arrayNext()) {
          for ( ; size6 != 0; size6--) {
            com.maersk.Geography.smds.operations.MSK.GeographyBDADetails e6 = (ga6 != null ? ga6.peek() : null);
            if (e6 == null) {
              e6 = new com.maersk.Geography.smds.operations.MSK.GeographyBDADetails();
            }
            e6.customDecode(in);
            a6.add(e6);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.GeographyBDALocationsDetails = null;
      } else {
        long size7 = in.readArrayStart();
        java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> a7 = this.GeographyBDALocationsDetails;
        if (a7 == null) {
          a7 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>((int)size7, SCHEMA$.getField("GeographyBDALocationsDetails").schema().getTypes().get(1));
          this.GeographyBDALocationsDetails = a7;
        } else a7.clear();
        SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> ga7 = (a7 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>)a7 : null);
        for ( ; 0 < size7; size7 = in.arrayNext()) {
          for ( ; size7 != 0; size7--) {
            com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails e7 = (ga7 != null ? ga7.peek() : null);
            if (e7 == null) {
              e7 = new com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails();
            }
            e7.customDecode(in);
            a7.add(e7);
          }
        }
      }

    } else {
      for (int i = 0; i < 40; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeoRowID = null;
          } else {
            this.GeoRowID = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeoType = null;
          } else {
            this.GeoType = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Name = null;
          } else {
            this.Name = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Status = null;
          } else {
            this.Status = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ValidFrom = null;
          } else {
            this.ValidFrom = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ValidTo = null;
          } else {
            this.ValidTo = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Longitude = null;
          } else {
            this.Longitude = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Latitude = null;
          } else {
            this.Latitude = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TimeZone = null;
          } else {
            this.TimeZone = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DaylightSavingTime = null;
          } else {
            this.DaylightSavingTime = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.UTCOffsetMinutes = null;
          } else {
            this.UTCOffsetMinutes = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DaylightSavingStart = null;
          } else {
            this.DaylightSavingStart = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DaylightSavingEnd = null;
          } else {
            this.DaylightSavingEnd = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DaylightSavingShiftMinutes = null;
          } else {
            this.DaylightSavingShiftMinutes = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Description = null;
          } else {
            this.Description = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.WorkaroundReason = null;
          } else {
            this.WorkaroundReason = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.Restricted = null;
          } else {
            this.Restricted = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SiteType = null;
          } else {
            this.SiteType = in.readString();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GPSFlag = null;
          } else {
            this.GPSFlag = in.readString();
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GSMFlag = null;
          } else {
            this.GSMFlag = in.readString();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.StreetNumber = null;
          } else {
            this.StreetNumber = in.readString();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.AddressLine1 = null;
          } else {
            this.AddressLine1 = in.readString();
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.AddressLine2 = null;
          } else {
            this.AddressLine2 = in.readString();
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.AddressLine3 = null;
          } else {
            this.AddressLine3 = in.readString();
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PostalCode = null;
          } else {
            this.PostalCode = in.readString();
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PostalCodeMandatoryFlag = null;
          } else {
            this.PostalCodeMandatoryFlag = in.readString();
          }
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.StateProvienceMandatory = null;
          } else {
            this.StateProvienceMandatory = in.readString();
          }
          break;

        case 27:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DialingCode = null;
          } else {
            this.DialingCode = in.readString();
          }
          break;

        case 28:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DialingCodedescription = null;
          } else {
            this.DialingCodedescription = in.readString();
          }
          break;

        case 29:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PortFlag = null;
          } else {
            this.PortFlag = in.readString();
          }
          break;

        case 30:
          if (in.readIndex() != 1) {
            in.readNull();
            this.OlsonTimezone = null;
          } else {
            this.OlsonTimezone = in.readString();
          }
          break;

        case 31:
          if (in.readIndex() != 1) {
            in.readNull();
            this.BDAType = null;
          } else {
            this.BDAType = in.readString();
          }
          break;

        case 32:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyAlternateNames = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> a0 = this.GeographyAlternateNames;
            if (a0 == null) {
              a0 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>((int)size0, SCHEMA$.getField("GeographyAlternateNames").schema().getTypes().get(1));
              this.GeographyAlternateNames = a0;
            } else a0.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new com.maersk.Geography.smds.operations.MSK.GeographyAlternateNames();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 33:
          long size1 = in.readArrayStart();
          java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> a1 = this.GeographyAlternateCodes;
          if (a1 == null) {
            a1 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>((int)size1, SCHEMA$.getField("GeographyAlternateCodes").schema());
            this.GeographyAlternateCodes = a1;
          } else a1.clear();
          SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes e1 = (ga1 != null ? ga1.peek() : null);
              if (e1 == null) {
                e1 = new com.maersk.Geography.smds.operations.MSK.GeographyAlternateCodes();
              }
              e1.customDecode(in);
              a1.add(e1);
            }
          }
          break;

        case 34:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyFence = null;
          } else {
            long size2 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyFence> a2 = this.GeographyFence;
            if (a2 == null) {
              a2 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence>((int)size2, SCHEMA$.getField("GeographyFence").schema().getTypes().get(1));
              this.GeographyFence = a2;
            } else a2.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyFence>)a2 : null);
            for ( ; 0 < size2; size2 = in.arrayNext()) {
              for ( ; size2 != 0; size2--) {
                com.maersk.Geography.smds.operations.MSK.GeographyFence e2 = (ga2 != null ? ga2.peek() : null);
                if (e2 == null) {
                  e2 = new com.maersk.Geography.smds.operations.MSK.GeographyFence();
                }
                e2.customDecode(in);
                a2.add(e2);
              }
            }
          }
          break;

        case 35:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyCountryDetails = null;
          } else {
            long size3 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> a3 = this.GeographyCountryDetails;
            if (a3 == null) {
              a3 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>((int)size3, SCHEMA$.getField("GeographyCountryDetails").schema().getTypes().get(1));
              this.GeographyCountryDetails = a3;
            } else a3.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails>)a3 : null);
            for ( ; 0 < size3; size3 = in.arrayNext()) {
              for ( ; size3 != 0; size3--) {
                com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails e3 = (ga3 != null ? ga3.peek() : null);
                if (e3 == null) {
                  e3 = new com.maersk.Geography.smds.operations.MSK.GeographyCountryDetails();
                }
                e3.customDecode(in);
                a3.add(e3);
              }
            }
          }
          break;

        case 36:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyParentDetails = null;
          } else {
            long size4 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> a4 = this.GeographyParentDetails;
            if (a4 == null) {
              a4 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>((int)size4, SCHEMA$.getField("GeographyParentDetails").schema().getTypes().get(1));
              this.GeographyParentDetails = a4;
            } else a4.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyParentDetails>)a4 : null);
            for ( ; 0 < size4; size4 = in.arrayNext()) {
              for ( ; size4 != 0; size4--) {
                com.maersk.Geography.smds.operations.MSK.GeographyParentDetails e4 = (ga4 != null ? ga4.peek() : null);
                if (e4 == null) {
                  e4 = new com.maersk.Geography.smds.operations.MSK.GeographyParentDetails();
                }
                e4.customDecode(in);
                a4.add(e4);
              }
            }
          }
          break;

        case 37:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographySubCityParentDetails = null;
          } else {
            long size5 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> a5 = this.GeographySubCityParentDetails;
            if (a5 == null) {
              a5 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>((int)size5, SCHEMA$.getField("GeographySubCityParentDetails").schema().getTypes().get(1));
              this.GeographySubCityParentDetails = a5;
            } else a5.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails>)a5 : null);
            for ( ; 0 < size5; size5 = in.arrayNext()) {
              for ( ; size5 != 0; size5--) {
                com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails e5 = (ga5 != null ? ga5.peek() : null);
                if (e5 == null) {
                  e5 = new com.maersk.Geography.smds.operations.MSK.GeographySubCityParentDetails();
                }
                e5.customDecode(in);
                a5.add(e5);
              }
            }
          }
          break;

        case 38:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyBDADetails = null;
          } else {
            long size6 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> a6 = this.GeographyBDADetails;
            if (a6 == null) {
              a6 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>((int)size6, SCHEMA$.getField("GeographyBDADetails").schema().getTypes().get(1));
              this.GeographyBDADetails = a6;
            } else a6.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDADetails>)a6 : null);
            for ( ; 0 < size6; size6 = in.arrayNext()) {
              for ( ; size6 != 0; size6--) {
                com.maersk.Geography.smds.operations.MSK.GeographyBDADetails e6 = (ga6 != null ? ga6.peek() : null);
                if (e6 == null) {
                  e6 = new com.maersk.Geography.smds.operations.MSK.GeographyBDADetails();
                }
                e6.customDecode(in);
                a6.add(e6);
              }
            }
          }
          break;

        case 39:
          if (in.readIndex() != 1) {
            in.readNull();
            this.GeographyBDALocationsDetails = null;
          } else {
            long size7 = in.readArrayStart();
            java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> a7 = this.GeographyBDALocationsDetails;
            if (a7 == null) {
              a7 = new SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>((int)size7, SCHEMA$.getField("GeographyBDALocationsDetails").schema().getTypes().get(1));
              this.GeographyBDALocationsDetails = a7;
            } else a7.clear();
            SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails> ga7 = (a7 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails>)a7 : null);
            for ( ; 0 < size7; size7 = in.arrayNext()) {
              for ( ; size7 != 0; size7--) {
                com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails e7 = (ga7 != null ? ga7.peek() : null);
                if (e7 == null) {
                  e7 = new com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails();
                }
                e7.customDecode(in);
                a7.add(e7);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










