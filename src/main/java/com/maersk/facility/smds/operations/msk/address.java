/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.facility.smds.operations.msk;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Facility Address */
@org.apache.avro.specific.AvroGenerated
public class address extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5753619625138010282L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"address\",\"namespace\":\"com.maersk.facility.smds.operations.msk\",\"doc\":\"Facility Address\",\"fields\":[{\"name\":\"houseNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address house number information.Example: 39\",\"default\":null},{\"name\":\"street\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN\",\"default\":null},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The facility address city information.Example: Cosne Cours sur Loire\"},{\"name\":\"postalCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address postal code information.Example: 58200\",\"default\":null},{\"name\":\"poBox\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address pobox information.Example: 284\",\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address district information.Example: visakhapatnam\",\"default\":null},{\"name\":\"territory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address state or teritory information.Example: new jersey\",\"default\":null},{\"name\":\"countryName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The facility address country information.Example: India\"},{\"name\":\"countryCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The facility address country code information.Example: IN\"},{\"name\":\"addressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address line2 information.Example: COSNES COURS SUR LOIRE\",\"default\":null},{\"name\":\"addressLine3\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address line3 information.Example: COSNES COURS SUR LOIRE\",\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address latitude information.Example: -26.241661\",\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The facility address longitude information.Example: -48.636938\",\"default\":null},{\"name\":\"addressQualityCheckIndicator\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Checks the facility address Quality.Example: Check or Do Not Check\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<address> ENCODER =
      new BinaryMessageEncoder<address>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<address> DECODER =
      new BinaryMessageDecoder<address>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<address> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<address> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<address> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<address>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this address to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a address from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a address instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static address fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The facility address house number information.Example: 39 */
  private java.lang.String houseNumber;
  /** The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN */
  private java.lang.String street;
  /** The facility address city information.Example: Cosne Cours sur Loire */
  private java.lang.String city;
  /** The facility address postal code information.Example: 58200 */
  private java.lang.String postalCode;
  /** The facility address pobox information.Example: 284 */
  private java.lang.String poBox;
  /** The facility address district information.Example: visakhapatnam */
  private java.lang.String district;
  /** The facility address state or teritory information.Example: new jersey */
  private java.lang.String territory;
  /** The facility address country information.Example: India */
  private java.lang.String countryName;
  /** The facility address country code information.Example: IN */
  private java.lang.String countryCode;
  /** The facility address line2 information.Example: COSNES COURS SUR LOIRE */
  private java.lang.String addressLine2;
  /** The facility address line3 information.Example: COSNES COURS SUR LOIRE */
  private java.lang.String addressLine3;
  /** The facility address latitude information.Example: -26.241661 */
  private java.lang.String latitude;
  /** The facility address longitude information.Example: -48.636938 */
  private java.lang.String longitude;
  /** Checks the facility address Quality.Example: Check or Do Not Check */
  private java.lang.String addressQualityCheckIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public address() {}

  /**
   * All-args constructor.
   * @param houseNumber The facility address house number information.Example: 39
   * @param street The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
   * @param city The facility address city information.Example: Cosne Cours sur Loire
   * @param postalCode The facility address postal code information.Example: 58200
   * @param poBox The facility address pobox information.Example: 284
   * @param district The facility address district information.Example: visakhapatnam
   * @param territory The facility address state or teritory information.Example: new jersey
   * @param countryName The facility address country information.Example: India
   * @param countryCode The facility address country code information.Example: IN
   * @param addressLine2 The facility address line2 information.Example: COSNES COURS SUR LOIRE
   * @param addressLine3 The facility address line3 information.Example: COSNES COURS SUR LOIRE
   * @param latitude The facility address latitude information.Example: -26.241661
   * @param longitude The facility address longitude information.Example: -48.636938
   * @param addressQualityCheckIndicator Checks the facility address Quality.Example: Check or Do Not Check
   */
  public address(java.lang.String houseNumber, java.lang.String street, java.lang.String city, java.lang.String postalCode, java.lang.String poBox, java.lang.String district, java.lang.String territory, java.lang.String countryName, java.lang.String countryCode, java.lang.String addressLine2, java.lang.String addressLine3, java.lang.String latitude, java.lang.String longitude, java.lang.String addressQualityCheckIndicator) {
    this.houseNumber = houseNumber;
    this.street = street;
    this.city = city;
    this.postalCode = postalCode;
    this.poBox = poBox;
    this.district = district;
    this.territory = territory;
    this.countryName = countryName;
    this.countryCode = countryCode;
    this.addressLine2 = addressLine2;
    this.addressLine3 = addressLine3;
    this.latitude = latitude;
    this.longitude = longitude;
    this.addressQualityCheckIndicator = addressQualityCheckIndicator;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return houseNumber;
    case 1: return street;
    case 2: return city;
    case 3: return postalCode;
    case 4: return poBox;
    case 5: return district;
    case 6: return territory;
    case 7: return countryName;
    case 8: return countryCode;
    case 9: return addressLine2;
    case 10: return addressLine3;
    case 11: return latitude;
    case 12: return longitude;
    case 13: return addressQualityCheckIndicator;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: houseNumber = value$ != null ? value$.toString() : null; break;
    case 1: street = value$ != null ? value$.toString() : null; break;
    case 2: city = value$ != null ? value$.toString() : null; break;
    case 3: postalCode = value$ != null ? value$.toString() : null; break;
    case 4: poBox = value$ != null ? value$.toString() : null; break;
    case 5: district = value$ != null ? value$.toString() : null; break;
    case 6: territory = value$ != null ? value$.toString() : null; break;
    case 7: countryName = value$ != null ? value$.toString() : null; break;
    case 8: countryCode = value$ != null ? value$.toString() : null; break;
    case 9: addressLine2 = value$ != null ? value$.toString() : null; break;
    case 10: addressLine3 = value$ != null ? value$.toString() : null; break;
    case 11: latitude = value$ != null ? value$.toString() : null; break;
    case 12: longitude = value$ != null ? value$.toString() : null; break;
    case 13: addressQualityCheckIndicator = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'houseNumber' field.
   * @return The facility address house number information.Example: 39
   */
  public java.lang.String getHouseNumber() {
    return houseNumber;
  }


  /**
   * Sets the value of the 'houseNumber' field.
   * The facility address house number information.Example: 39
   * @param value the value to set.
   */
  public void setHouseNumber(java.lang.String value) {
    this.houseNumber = value;
  }

  /**
   * Gets the value of the 'street' field.
   * @return The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
   */
  public java.lang.String getStreet() {
    return street;
  }


  /**
   * Sets the value of the 'street' field.
   * The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
   * @param value the value to set.
   */
  public void setStreet(java.lang.String value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The facility address city information.Example: Cosne Cours sur Loire
   */
  public java.lang.String getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * The facility address city information.Example: Cosne Cours sur Loire
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'postalCode' field.
   * @return The facility address postal code information.Example: 58200
   */
  public java.lang.String getPostalCode() {
    return postalCode;
  }


  /**
   * Sets the value of the 'postalCode' field.
   * The facility address postal code information.Example: 58200
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.String value) {
    this.postalCode = value;
  }

  /**
   * Gets the value of the 'poBox' field.
   * @return The facility address pobox information.Example: 284
   */
  public java.lang.String getPoBox() {
    return poBox;
  }


  /**
   * Sets the value of the 'poBox' field.
   * The facility address pobox information.Example: 284
   * @param value the value to set.
   */
  public void setPoBox(java.lang.String value) {
    this.poBox = value;
  }

  /**
   * Gets the value of the 'district' field.
   * @return The facility address district information.Example: visakhapatnam
   */
  public java.lang.String getDistrict() {
    return district;
  }


  /**
   * Sets the value of the 'district' field.
   * The facility address district information.Example: visakhapatnam
   * @param value the value to set.
   */
  public void setDistrict(java.lang.String value) {
    this.district = value;
  }

  /**
   * Gets the value of the 'territory' field.
   * @return The facility address state or teritory information.Example: new jersey
   */
  public java.lang.String getTerritory() {
    return territory;
  }


  /**
   * Sets the value of the 'territory' field.
   * The facility address state or teritory information.Example: new jersey
   * @param value the value to set.
   */
  public void setTerritory(java.lang.String value) {
    this.territory = value;
  }

  /**
   * Gets the value of the 'countryName' field.
   * @return The facility address country information.Example: India
   */
  public java.lang.String getCountryName() {
    return countryName;
  }


  /**
   * Sets the value of the 'countryName' field.
   * The facility address country information.Example: India
   * @param value the value to set.
   */
  public void setCountryName(java.lang.String value) {
    this.countryName = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   * @return The facility address country code information.Example: IN
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }


  /**
   * Sets the value of the 'countryCode' field.
   * The facility address country code information.Example: IN
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.String value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'addressLine2' field.
   * @return The facility address line2 information.Example: COSNES COURS SUR LOIRE
   */
  public java.lang.String getAddressLine2() {
    return addressLine2;
  }


  /**
   * Sets the value of the 'addressLine2' field.
   * The facility address line2 information.Example: COSNES COURS SUR LOIRE
   * @param value the value to set.
   */
  public void setAddressLine2(java.lang.String value) {
    this.addressLine2 = value;
  }

  /**
   * Gets the value of the 'addressLine3' field.
   * @return The facility address line3 information.Example: COSNES COURS SUR LOIRE
   */
  public java.lang.String getAddressLine3() {
    return addressLine3;
  }


  /**
   * Sets the value of the 'addressLine3' field.
   * The facility address line3 information.Example: COSNES COURS SUR LOIRE
   * @param value the value to set.
   */
  public void setAddressLine3(java.lang.String value) {
    this.addressLine3 = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The facility address latitude information.Example: -26.241661
   */
  public java.lang.String getLatitude() {
    return latitude;
  }


  /**
   * Sets the value of the 'latitude' field.
   * The facility address latitude information.Example: -26.241661
   * @param value the value to set.
   */
  public void setLatitude(java.lang.String value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The facility address longitude information.Example: -48.636938
   */
  public java.lang.String getLongitude() {
    return longitude;
  }


  /**
   * Sets the value of the 'longitude' field.
   * The facility address longitude information.Example: -48.636938
   * @param value the value to set.
   */
  public void setLongitude(java.lang.String value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'addressQualityCheckIndicator' field.
   * @return Checks the facility address Quality.Example: Check or Do Not Check
   */
  public java.lang.String getAddressQualityCheckIndicator() {
    return addressQualityCheckIndicator;
  }


  /**
   * Sets the value of the 'addressQualityCheckIndicator' field.
   * Checks the facility address Quality.Example: Check or Do Not Check
   * @param value the value to set.
   */
  public void setAddressQualityCheckIndicator(java.lang.String value) {
    this.addressQualityCheckIndicator = value;
  }

  /**
   * Creates a new address RecordBuilder.
   * @return A new address RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.address.Builder newBuilder() {
    return new com.maersk.facility.smds.operations.msk.address.Builder();
  }

  /**
   * Creates a new address RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new address RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.address.Builder newBuilder(com.maersk.facility.smds.operations.msk.address.Builder other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.address.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.address.Builder(other);
    }
  }

  /**
   * Creates a new address RecordBuilder by copying an existing address instance.
   * @param other The existing instance to copy.
   * @return A new address RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.address.Builder newBuilder(com.maersk.facility.smds.operations.msk.address other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.address.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.address.Builder(other);
    }
  }

  /**
   * RecordBuilder for address instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<address>
    implements org.apache.avro.data.RecordBuilder<address> {

    /** The facility address house number information.Example: 39 */
    private java.lang.String houseNumber;
    /** The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN */
    private java.lang.String street;
    /** The facility address city information.Example: Cosne Cours sur Loire */
    private java.lang.String city;
    /** The facility address postal code information.Example: 58200 */
    private java.lang.String postalCode;
    /** The facility address pobox information.Example: 284 */
    private java.lang.String poBox;
    /** The facility address district information.Example: visakhapatnam */
    private java.lang.String district;
    /** The facility address state or teritory information.Example: new jersey */
    private java.lang.String territory;
    /** The facility address country information.Example: India */
    private java.lang.String countryName;
    /** The facility address country code information.Example: IN */
    private java.lang.String countryCode;
    /** The facility address line2 information.Example: COSNES COURS SUR LOIRE */
    private java.lang.String addressLine2;
    /** The facility address line3 information.Example: COSNES COURS SUR LOIRE */
    private java.lang.String addressLine3;
    /** The facility address latitude information.Example: -26.241661 */
    private java.lang.String latitude;
    /** The facility address longitude information.Example: -48.636938 */
    private java.lang.String longitude;
    /** Checks the facility address Quality.Example: Check or Do Not Check */
    private java.lang.String addressQualityCheckIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.address.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.houseNumber)) {
        this.houseNumber = data().deepCopy(fields()[0].schema(), other.houseNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.street)) {
        this.street = data().deepCopy(fields()[1].schema(), other.street);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.city)) {
        this.city = data().deepCopy(fields()[2].schema(), other.city);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[3].schema(), other.postalCode);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.poBox)) {
        this.poBox = data().deepCopy(fields()[4].schema(), other.poBox);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.district)) {
        this.district = data().deepCopy(fields()[5].schema(), other.district);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.territory)) {
        this.territory = data().deepCopy(fields()[6].schema(), other.territory);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.countryName)) {
        this.countryName = data().deepCopy(fields()[7].schema(), other.countryName);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[8].schema(), other.countryCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[9].schema(), other.addressLine2);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.addressLine3)) {
        this.addressLine3 = data().deepCopy(fields()[10].schema(), other.addressLine3);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.latitude)) {
        this.latitude = data().deepCopy(fields()[11].schema(), other.latitude);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.longitude)) {
        this.longitude = data().deepCopy(fields()[12].schema(), other.longitude);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.addressQualityCheckIndicator)) {
        this.addressQualityCheckIndicator = data().deepCopy(fields()[13].schema(), other.addressQualityCheckIndicator);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing address instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.address other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.houseNumber)) {
        this.houseNumber = data().deepCopy(fields()[0].schema(), other.houseNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.street)) {
        this.street = data().deepCopy(fields()[1].schema(), other.street);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.city)) {
        this.city = data().deepCopy(fields()[2].schema(), other.city);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.postalCode)) {
        this.postalCode = data().deepCopy(fields()[3].schema(), other.postalCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.poBox)) {
        this.poBox = data().deepCopy(fields()[4].schema(), other.poBox);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.district)) {
        this.district = data().deepCopy(fields()[5].schema(), other.district);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.territory)) {
        this.territory = data().deepCopy(fields()[6].schema(), other.territory);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countryName)) {
        this.countryName = data().deepCopy(fields()[7].schema(), other.countryName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[8].schema(), other.countryCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[9].schema(), other.addressLine2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.addressLine3)) {
        this.addressLine3 = data().deepCopy(fields()[10].schema(), other.addressLine3);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.latitude)) {
        this.latitude = data().deepCopy(fields()[11].schema(), other.latitude);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.longitude)) {
        this.longitude = data().deepCopy(fields()[12].schema(), other.longitude);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.addressQualityCheckIndicator)) {
        this.addressQualityCheckIndicator = data().deepCopy(fields()[13].schema(), other.addressQualityCheckIndicator);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'houseNumber' field.
      * The facility address house number information.Example: 39
      * @return The value.
      */
    public java.lang.String getHouseNumber() {
      return houseNumber;
    }


    /**
      * Sets the value of the 'houseNumber' field.
      * The facility address house number information.Example: 39
      * @param value The value of 'houseNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setHouseNumber(java.lang.String value) {
      validate(fields()[0], value);
      this.houseNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'houseNumber' field has been set.
      * The facility address house number information.Example: 39
      * @return True if the 'houseNumber' field has been set, false otherwise.
      */
    public boolean hasHouseNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'houseNumber' field.
      * The facility address house number information.Example: 39
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearHouseNumber() {
      houseNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'street' field.
      * The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
      * @return The value.
      */
    public java.lang.String getStreet() {
      return street;
    }


    /**
      * Sets the value of the 'street' field.
      * The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
      * @param value The value of 'street'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setStreet(java.lang.String value) {
      validate(fields()[1], value);
      this.street = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'street' field has been set.
      * The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
      * @return True if the 'street' field has been set, false otherwise.
      */
    public boolean hasStreet() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'street' field.
      * The facility address street information.Example: RUE DES RIVIERES SAINT AGNAN
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearStreet() {
      street = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * The facility address city information.Example: Cosne Cours sur Loire
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * The facility address city information.Example: Cosne Cours sur Loire
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setCity(java.lang.String value) {
      validate(fields()[2], value);
      this.city = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * The facility address city information.Example: Cosne Cours sur Loire
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'city' field.
      * The facility address city information.Example: Cosne Cours sur Loire
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearCity() {
      city = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalCode' field.
      * The facility address postal code information.Example: 58200
      * @return The value.
      */
    public java.lang.String getPostalCode() {
      return postalCode;
    }


    /**
      * Sets the value of the 'postalCode' field.
      * The facility address postal code information.Example: 58200
      * @param value The value of 'postalCode'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setPostalCode(java.lang.String value) {
      validate(fields()[3], value);
      this.postalCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'postalCode' field has been set.
      * The facility address postal code information.Example: 58200
      * @return True if the 'postalCode' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'postalCode' field.
      * The facility address postal code information.Example: 58200
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearPostalCode() {
      postalCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'poBox' field.
      * The facility address pobox information.Example: 284
      * @return The value.
      */
    public java.lang.String getPoBox() {
      return poBox;
    }


    /**
      * Sets the value of the 'poBox' field.
      * The facility address pobox information.Example: 284
      * @param value The value of 'poBox'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setPoBox(java.lang.String value) {
      validate(fields()[4], value);
      this.poBox = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'poBox' field has been set.
      * The facility address pobox information.Example: 284
      * @return True if the 'poBox' field has been set, false otherwise.
      */
    public boolean hasPoBox() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'poBox' field.
      * The facility address pobox information.Example: 284
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearPoBox() {
      poBox = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'district' field.
      * The facility address district information.Example: visakhapatnam
      * @return The value.
      */
    public java.lang.String getDistrict() {
      return district;
    }


    /**
      * Sets the value of the 'district' field.
      * The facility address district information.Example: visakhapatnam
      * @param value The value of 'district'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setDistrict(java.lang.String value) {
      validate(fields()[5], value);
      this.district = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'district' field has been set.
      * The facility address district information.Example: visakhapatnam
      * @return True if the 'district' field has been set, false otherwise.
      */
    public boolean hasDistrict() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'district' field.
      * The facility address district information.Example: visakhapatnam
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearDistrict() {
      district = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'territory' field.
      * The facility address state or teritory information.Example: new jersey
      * @return The value.
      */
    public java.lang.String getTerritory() {
      return territory;
    }


    /**
      * Sets the value of the 'territory' field.
      * The facility address state or teritory information.Example: new jersey
      * @param value The value of 'territory'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setTerritory(java.lang.String value) {
      validate(fields()[6], value);
      this.territory = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'territory' field has been set.
      * The facility address state or teritory information.Example: new jersey
      * @return True if the 'territory' field has been set, false otherwise.
      */
    public boolean hasTerritory() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'territory' field.
      * The facility address state or teritory information.Example: new jersey
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearTerritory() {
      territory = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryName' field.
      * The facility address country information.Example: India
      * @return The value.
      */
    public java.lang.String getCountryName() {
      return countryName;
    }


    /**
      * Sets the value of the 'countryName' field.
      * The facility address country information.Example: India
      * @param value The value of 'countryName'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setCountryName(java.lang.String value) {
      validate(fields()[7], value);
      this.countryName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'countryName' field has been set.
      * The facility address country information.Example: India
      * @return True if the 'countryName' field has been set, false otherwise.
      */
    public boolean hasCountryName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'countryName' field.
      * The facility address country information.Example: India
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearCountryName() {
      countryName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode' field.
      * The facility address country code information.Example: IN
      * @return The value.
      */
    public java.lang.String getCountryCode() {
      return countryCode;
    }


    /**
      * Sets the value of the 'countryCode' field.
      * The facility address country code information.Example: IN
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setCountryCode(java.lang.String value) {
      validate(fields()[8], value);
      this.countryCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * The facility address country code information.Example: IN
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * The facility address country code information.Example: IN
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine2' field.
      * The facility address line2 information.Example: COSNES COURS SUR LOIRE
      * @return The value.
      */
    public java.lang.String getAddressLine2() {
      return addressLine2;
    }


    /**
      * Sets the value of the 'addressLine2' field.
      * The facility address line2 information.Example: COSNES COURS SUR LOIRE
      * @param value The value of 'addressLine2'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setAddressLine2(java.lang.String value) {
      validate(fields()[9], value);
      this.addressLine2 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine2' field has been set.
      * The facility address line2 information.Example: COSNES COURS SUR LOIRE
      * @return True if the 'addressLine2' field has been set, false otherwise.
      */
    public boolean hasAddressLine2() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'addressLine2' field.
      * The facility address line2 information.Example: COSNES COURS SUR LOIRE
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearAddressLine2() {
      addressLine2 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine3' field.
      * The facility address line3 information.Example: COSNES COURS SUR LOIRE
      * @return The value.
      */
    public java.lang.String getAddressLine3() {
      return addressLine3;
    }


    /**
      * Sets the value of the 'addressLine3' field.
      * The facility address line3 information.Example: COSNES COURS SUR LOIRE
      * @param value The value of 'addressLine3'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setAddressLine3(java.lang.String value) {
      validate(fields()[10], value);
      this.addressLine3 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine3' field has been set.
      * The facility address line3 information.Example: COSNES COURS SUR LOIRE
      * @return True if the 'addressLine3' field has been set, false otherwise.
      */
    public boolean hasAddressLine3() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'addressLine3' field.
      * The facility address line3 information.Example: COSNES COURS SUR LOIRE
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearAddressLine3() {
      addressLine3 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * The facility address latitude information.Example: -26.241661
      * @return The value.
      */
    public java.lang.String getLatitude() {
      return latitude;
    }


    /**
      * Sets the value of the 'latitude' field.
      * The facility address latitude information.Example: -26.241661
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setLatitude(java.lang.String value) {
      validate(fields()[11], value);
      this.latitude = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * The facility address latitude information.Example: -26.241661
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'latitude' field.
      * The facility address latitude information.Example: -26.241661
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * The facility address longitude information.Example: -48.636938
      * @return The value.
      */
    public java.lang.String getLongitude() {
      return longitude;
    }


    /**
      * Sets the value of the 'longitude' field.
      * The facility address longitude information.Example: -48.636938
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setLongitude(java.lang.String value) {
      validate(fields()[12], value);
      this.longitude = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * The facility address longitude information.Example: -48.636938
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'longitude' field.
      * The facility address longitude information.Example: -48.636938
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressQualityCheckIndicator' field.
      * Checks the facility address Quality.Example: Check or Do Not Check
      * @return The value.
      */
    public java.lang.String getAddressQualityCheckIndicator() {
      return addressQualityCheckIndicator;
    }


    /**
      * Sets the value of the 'addressQualityCheckIndicator' field.
      * Checks the facility address Quality.Example: Check or Do Not Check
      * @param value The value of 'addressQualityCheckIndicator'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder setAddressQualityCheckIndicator(java.lang.String value) {
      validate(fields()[13], value);
      this.addressQualityCheckIndicator = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'addressQualityCheckIndicator' field has been set.
      * Checks the facility address Quality.Example: Check or Do Not Check
      * @return True if the 'addressQualityCheckIndicator' field has been set, false otherwise.
      */
    public boolean hasAddressQualityCheckIndicator() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'addressQualityCheckIndicator' field.
      * Checks the facility address Quality.Example: Check or Do Not Check
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.address.Builder clearAddressQualityCheckIndicator() {
      addressQualityCheckIndicator = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public address build() {
      try {
        address record = new address();
        record.houseNumber = fieldSetFlags()[0] ? this.houseNumber : (java.lang.String) defaultValue(fields()[0]);
        record.street = fieldSetFlags()[1] ? this.street : (java.lang.String) defaultValue(fields()[1]);
        record.city = fieldSetFlags()[2] ? this.city : (java.lang.String) defaultValue(fields()[2]);
        record.postalCode = fieldSetFlags()[3] ? this.postalCode : (java.lang.String) defaultValue(fields()[3]);
        record.poBox = fieldSetFlags()[4] ? this.poBox : (java.lang.String) defaultValue(fields()[4]);
        record.district = fieldSetFlags()[5] ? this.district : (java.lang.String) defaultValue(fields()[5]);
        record.territory = fieldSetFlags()[6] ? this.territory : (java.lang.String) defaultValue(fields()[6]);
        record.countryName = fieldSetFlags()[7] ? this.countryName : (java.lang.String) defaultValue(fields()[7]);
        record.countryCode = fieldSetFlags()[8] ? this.countryCode : (java.lang.String) defaultValue(fields()[8]);
        record.addressLine2 = fieldSetFlags()[9] ? this.addressLine2 : (java.lang.String) defaultValue(fields()[9]);
        record.addressLine3 = fieldSetFlags()[10] ? this.addressLine3 : (java.lang.String) defaultValue(fields()[10]);
        record.latitude = fieldSetFlags()[11] ? this.latitude : (java.lang.String) defaultValue(fields()[11]);
        record.longitude = fieldSetFlags()[12] ? this.longitude : (java.lang.String) defaultValue(fields()[12]);
        record.addressQualityCheckIndicator = fieldSetFlags()[13] ? this.addressQualityCheckIndicator : (java.lang.String) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<address>
    WRITER$ = (org.apache.avro.io.DatumWriter<address>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<address>
    READER$ = (org.apache.avro.io.DatumReader<address>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.houseNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.houseNumber);
    }

    if (this.street == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.street);
    }

    out.writeString(this.city);

    if (this.postalCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.postalCode);
    }

    if (this.poBox == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.poBox);
    }

    if (this.district == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.district);
    }

    if (this.territory == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.territory);
    }

    out.writeString(this.countryName);

    out.writeString(this.countryCode);

    if (this.addressLine2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.addressLine2);
    }

    if (this.addressLine3 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.addressLine3);
    }

    if (this.latitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.latitude);
    }

    if (this.longitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.longitude);
    }

    out.writeString(this.addressQualityCheckIndicator);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.houseNumber = null;
      } else {
        this.houseNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.street = null;
      } else {
        this.street = in.readString();
      }

      this.city = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.postalCode = null;
      } else {
        this.postalCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.poBox = null;
      } else {
        this.poBox = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.district = null;
      } else {
        this.district = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.territory = null;
      } else {
        this.territory = in.readString();
      }

      this.countryName = in.readString();

      this.countryCode = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.addressLine2 = null;
      } else {
        this.addressLine2 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.addressLine3 = null;
      } else {
        this.addressLine3 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.latitude = null;
      } else {
        this.latitude = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.longitude = null;
      } else {
        this.longitude = in.readString();
      }

      this.addressQualityCheckIndicator = in.readString();

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.houseNumber = null;
          } else {
            this.houseNumber = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.street = null;
          } else {
            this.street = in.readString();
          }
          break;

        case 2:
          this.city = in.readString();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.postalCode = null;
          } else {
            this.postalCode = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.poBox = null;
          } else {
            this.poBox = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.district = null;
          } else {
            this.district = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.territory = null;
          } else {
            this.territory = in.readString();
          }
          break;

        case 7:
          this.countryName = in.readString();
          break;

        case 8:
          this.countryCode = in.readString();
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addressLine2 = null;
          } else {
            this.addressLine2 = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addressLine3 = null;
          } else {
            this.addressLine3 = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.latitude = null;
          } else {
            this.latitude = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.longitude = null;
          } else {
            this.longitude = in.readString();
          }
          break;

        case 13:
          this.addressQualityCheckIndicator = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










