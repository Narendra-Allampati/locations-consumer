/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.facility.smds.operations.msk;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Facility Contact Details */
@org.apache.avro.specific.AvroGenerated
public class contactDetail extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3966325599267283932L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"contactDetail\",\"namespace\":\"com.maersk.facility.smds.operations.msk\",\"doc\":\"Facility Contact Details\",\"fields\":[{\"name\":\"firstName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  facility contact person first name. Example: Frank\"},{\"name\":\"lastName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  facility contact person last name. Example: Vanoutryve\"},{\"name\":\"jobTitle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person job title. Example: Commercial Manager\",\"default\":null},{\"name\":\"department\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person job department. Example: Commercial Area\",\"default\":null},{\"name\":\"internationalDialingCdPhone\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  facility contact person telephone international dialing code. Example: BE    +32\"},{\"name\":\"extension\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person phone extension. Example: 129\",\"default\":null},{\"name\":\"phoneNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  facility contact person phone number. Example: 2245190912\"},{\"name\":\"internationalDialingCdMobile\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person mobile international dialing code. Example: TR    +90\",\"default\":null},{\"name\":\"mobileNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person mobile number. Example: 5326541544\",\"default\":null},{\"name\":\"internaltionalDialingCodeFax\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person fax international dialing code. Example: TR    +90\",\"default\":null},{\"name\":\"faxNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person fax number. Example: 2245190400\",\"default\":null},{\"name\":\"emailAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The  facility contact person email address. Example: arcan@gemline.com.tr\",\"default\":null},{\"name\":\"validThroughDate\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"The  facility contact person valid through date. Example: 31-12-99\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<contactDetail> ENCODER =
      new BinaryMessageEncoder<contactDetail>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<contactDetail> DECODER =
      new BinaryMessageDecoder<contactDetail>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<contactDetail> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<contactDetail> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<contactDetail> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<contactDetail>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this contactDetail to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a contactDetail from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a contactDetail instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static contactDetail fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The  facility contact person first name. Example: Frank */
  private java.lang.String firstName;
  /** The  facility contact person last name. Example: Vanoutryve */
  private java.lang.String lastName;
  /** The  facility contact person job title. Example: Commercial Manager */
  private java.lang.String jobTitle;
  /** The  facility contact person job department. Example: Commercial Area */
  private java.lang.String department;
  /** The  facility contact person telephone international dialing code. Example: BE    +32 */
  private java.lang.String internationalDialingCdPhone;
  /** The  facility contact person phone extension. Example: 129 */
  private java.lang.String extension;
  /** The  facility contact person phone number. Example: 2245190912 */
  private java.lang.String phoneNumber;
  /** The  facility contact person mobile international dialing code. Example: TR    +90 */
  private java.lang.String internationalDialingCdMobile;
  /** The  facility contact person mobile number. Example: 5326541544 */
  private java.lang.String mobileNumber;
  /** The  facility contact person fax international dialing code. Example: TR    +90 */
  private java.lang.String internaltionalDialingCodeFax;
  /** The  facility contact person fax number. Example: 2245190400 */
  private java.lang.String faxNumber;
  /** The  facility contact person email address. Example: arcan@gemline.com.tr */
  private java.lang.String emailAddress;
  /** The  facility contact person valid through date. Example: 31-12-99 */
  private java.time.LocalDate validThroughDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public contactDetail() {}

  /**
   * All-args constructor.
   * @param firstName The  facility contact person first name. Example: Frank
   * @param lastName The  facility contact person last name. Example: Vanoutryve
   * @param jobTitle The  facility contact person job title. Example: Commercial Manager
   * @param department The  facility contact person job department. Example: Commercial Area
   * @param internationalDialingCdPhone The  facility contact person telephone international dialing code. Example: BE    +32
   * @param extension The  facility contact person phone extension. Example: 129
   * @param phoneNumber The  facility contact person phone number. Example: 2245190912
   * @param internationalDialingCdMobile The  facility contact person mobile international dialing code. Example: TR    +90
   * @param mobileNumber The  facility contact person mobile number. Example: 5326541544
   * @param internaltionalDialingCodeFax The  facility contact person fax international dialing code. Example: TR    +90
   * @param faxNumber The  facility contact person fax number. Example: 2245190400
   * @param emailAddress The  facility contact person email address. Example: arcan@gemline.com.tr
   * @param validThroughDate The  facility contact person valid through date. Example: 31-12-99
   */
  public contactDetail(java.lang.String firstName, java.lang.String lastName, java.lang.String jobTitle, java.lang.String department, java.lang.String internationalDialingCdPhone, java.lang.String extension, java.lang.String phoneNumber, java.lang.String internationalDialingCdMobile, java.lang.String mobileNumber, java.lang.String internaltionalDialingCodeFax, java.lang.String faxNumber, java.lang.String emailAddress, java.time.LocalDate validThroughDate) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.jobTitle = jobTitle;
    this.department = department;
    this.internationalDialingCdPhone = internationalDialingCdPhone;
    this.extension = extension;
    this.phoneNumber = phoneNumber;
    this.internationalDialingCdMobile = internationalDialingCdMobile;
    this.mobileNumber = mobileNumber;
    this.internaltionalDialingCodeFax = internaltionalDialingCodeFax;
    this.faxNumber = faxNumber;
    this.emailAddress = emailAddress;
    this.validThroughDate = validThroughDate;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return firstName;
    case 1: return lastName;
    case 2: return jobTitle;
    case 3: return department;
    case 4: return internationalDialingCdPhone;
    case 5: return extension;
    case 6: return phoneNumber;
    case 7: return internationalDialingCdMobile;
    case 8: return mobileNumber;
    case 9: return internaltionalDialingCodeFax;
    case 10: return faxNumber;
    case 11: return emailAddress;
    case 12: return validThroughDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: firstName = value$ != null ? value$.toString() : null; break;
    case 1: lastName = value$ != null ? value$.toString() : null; break;
    case 2: jobTitle = value$ != null ? value$.toString() : null; break;
    case 3: department = value$ != null ? value$.toString() : null; break;
    case 4: internationalDialingCdPhone = value$ != null ? value$.toString() : null; break;
    case 5: extension = value$ != null ? value$.toString() : null; break;
    case 6: phoneNumber = value$ != null ? value$.toString() : null; break;
    case 7: internationalDialingCdMobile = value$ != null ? value$.toString() : null; break;
    case 8: mobileNumber = value$ != null ? value$.toString() : null; break;
    case 9: internaltionalDialingCodeFax = value$ != null ? value$.toString() : null; break;
    case 10: faxNumber = value$ != null ? value$.toString() : null; break;
    case 11: emailAddress = value$ != null ? value$.toString() : null; break;
    case 12: validThroughDate = (java.time.LocalDate)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The  facility contact person first name. Example: Frank
   */
  public java.lang.String getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * The  facility contact person first name. Example: Frank
   * @param value the value to set.
   */
  public void setFirstName(java.lang.String value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The  facility contact person last name. Example: Vanoutryve
   */
  public java.lang.String getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * The  facility contact person last name. Example: Vanoutryve
   * @param value the value to set.
   */
  public void setLastName(java.lang.String value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'jobTitle' field.
   * @return The  facility contact person job title. Example: Commercial Manager
   */
  public java.lang.String getJobTitle() {
    return jobTitle;
  }


  /**
   * Sets the value of the 'jobTitle' field.
   * The  facility contact person job title. Example: Commercial Manager
   * @param value the value to set.
   */
  public void setJobTitle(java.lang.String value) {
    this.jobTitle = value;
  }

  /**
   * Gets the value of the 'department' field.
   * @return The  facility contact person job department. Example: Commercial Area
   */
  public java.lang.String getDepartment() {
    return department;
  }


  /**
   * Sets the value of the 'department' field.
   * The  facility contact person job department. Example: Commercial Area
   * @param value the value to set.
   */
  public void setDepartment(java.lang.String value) {
    this.department = value;
  }

  /**
   * Gets the value of the 'internationalDialingCdPhone' field.
   * @return The  facility contact person telephone international dialing code. Example: BE    +32
   */
  public java.lang.String getInternationalDialingCdPhone() {
    return internationalDialingCdPhone;
  }


  /**
   * Sets the value of the 'internationalDialingCdPhone' field.
   * The  facility contact person telephone international dialing code. Example: BE    +32
   * @param value the value to set.
   */
  public void setInternationalDialingCdPhone(java.lang.String value) {
    this.internationalDialingCdPhone = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The  facility contact person phone extension. Example: 129
   */
  public java.lang.String getExtension() {
    return extension;
  }


  /**
   * Sets the value of the 'extension' field.
   * The  facility contact person phone extension. Example: 129
   * @param value the value to set.
   */
  public void setExtension(java.lang.String value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The  facility contact person phone number. Example: 2245190912
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * The  facility contact person phone number. Example: 2245190912
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.String value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'internationalDialingCdMobile' field.
   * @return The  facility contact person mobile international dialing code. Example: TR    +90
   */
  public java.lang.String getInternationalDialingCdMobile() {
    return internationalDialingCdMobile;
  }


  /**
   * Sets the value of the 'internationalDialingCdMobile' field.
   * The  facility contact person mobile international dialing code. Example: TR    +90
   * @param value the value to set.
   */
  public void setInternationalDialingCdMobile(java.lang.String value) {
    this.internationalDialingCdMobile = value;
  }

  /**
   * Gets the value of the 'mobileNumber' field.
   * @return The  facility contact person mobile number. Example: 5326541544
   */
  public java.lang.String getMobileNumber() {
    return mobileNumber;
  }


  /**
   * Sets the value of the 'mobileNumber' field.
   * The  facility contact person mobile number. Example: 5326541544
   * @param value the value to set.
   */
  public void setMobileNumber(java.lang.String value) {
    this.mobileNumber = value;
  }

  /**
   * Gets the value of the 'internaltionalDialingCodeFax' field.
   * @return The  facility contact person fax international dialing code. Example: TR    +90
   */
  public java.lang.String getInternaltionalDialingCodeFax() {
    return internaltionalDialingCodeFax;
  }


  /**
   * Sets the value of the 'internaltionalDialingCodeFax' field.
   * The  facility contact person fax international dialing code. Example: TR    +90
   * @param value the value to set.
   */
  public void setInternaltionalDialingCodeFax(java.lang.String value) {
    this.internaltionalDialingCodeFax = value;
  }

  /**
   * Gets the value of the 'faxNumber' field.
   * @return The  facility contact person fax number. Example: 2245190400
   */
  public java.lang.String getFaxNumber() {
    return faxNumber;
  }


  /**
   * Sets the value of the 'faxNumber' field.
   * The  facility contact person fax number. Example: 2245190400
   * @param value the value to set.
   */
  public void setFaxNumber(java.lang.String value) {
    this.faxNumber = value;
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return The  facility contact person email address. Example: arcan@gemline.com.tr
   */
  public java.lang.String getEmailAddress() {
    return emailAddress;
  }


  /**
   * Sets the value of the 'emailAddress' field.
   * The  facility contact person email address. Example: arcan@gemline.com.tr
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.String value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'validThroughDate' field.
   * @return The  facility contact person valid through date. Example: 31-12-99
   */
  public java.time.LocalDate getValidThroughDate() {
    return validThroughDate;
  }


  /**
   * Sets the value of the 'validThroughDate' field.
   * The  facility contact person valid through date. Example: 31-12-99
   * @param value the value to set.
   */
  public void setValidThroughDate(java.time.LocalDate value) {
    this.validThroughDate = value;
  }

  /**
   * Creates a new contactDetail RecordBuilder.
   * @return A new contactDetail RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.contactDetail.Builder newBuilder() {
    return new com.maersk.facility.smds.operations.msk.contactDetail.Builder();
  }

  /**
   * Creates a new contactDetail RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new contactDetail RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.contactDetail.Builder newBuilder(com.maersk.facility.smds.operations.msk.contactDetail.Builder other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.contactDetail.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.contactDetail.Builder(other);
    }
  }

  /**
   * Creates a new contactDetail RecordBuilder by copying an existing contactDetail instance.
   * @param other The existing instance to copy.
   * @return A new contactDetail RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.contactDetail.Builder newBuilder(com.maersk.facility.smds.operations.msk.contactDetail other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.contactDetail.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.contactDetail.Builder(other);
    }
  }

  /**
   * RecordBuilder for contactDetail instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<contactDetail>
    implements org.apache.avro.data.RecordBuilder<contactDetail> {

    /** The  facility contact person first name. Example: Frank */
    private java.lang.String firstName;
    /** The  facility contact person last name. Example: Vanoutryve */
    private java.lang.String lastName;
    /** The  facility contact person job title. Example: Commercial Manager */
    private java.lang.String jobTitle;
    /** The  facility contact person job department. Example: Commercial Area */
    private java.lang.String department;
    /** The  facility contact person telephone international dialing code. Example: BE    +32 */
    private java.lang.String internationalDialingCdPhone;
    /** The  facility contact person phone extension. Example: 129 */
    private java.lang.String extension;
    /** The  facility contact person phone number. Example: 2245190912 */
    private java.lang.String phoneNumber;
    /** The  facility contact person mobile international dialing code. Example: TR    +90 */
    private java.lang.String internationalDialingCdMobile;
    /** The  facility contact person mobile number. Example: 5326541544 */
    private java.lang.String mobileNumber;
    /** The  facility contact person fax international dialing code. Example: TR    +90 */
    private java.lang.String internaltionalDialingCodeFax;
    /** The  facility contact person fax number. Example: 2245190400 */
    private java.lang.String faxNumber;
    /** The  facility contact person email address. Example: arcan@gemline.com.tr */
    private java.lang.String emailAddress;
    /** The  facility contact person valid through date. Example: 31-12-99 */
    private java.time.LocalDate validThroughDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.contactDetail.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[2].schema(), other.jobTitle);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.department)) {
        this.department = data().deepCopy(fields()[3].schema(), other.department);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.internationalDialingCdPhone)) {
        this.internationalDialingCdPhone = data().deepCopy(fields()[4].schema(), other.internationalDialingCdPhone);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[6].schema(), other.phoneNumber);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.internationalDialingCdMobile)) {
        this.internationalDialingCdMobile = data().deepCopy(fields()[7].schema(), other.internationalDialingCdMobile);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[8].schema(), other.mobileNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.internaltionalDialingCodeFax)) {
        this.internaltionalDialingCodeFax = data().deepCopy(fields()[9].schema(), other.internaltionalDialingCodeFax);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.faxNumber)) {
        this.faxNumber = data().deepCopy(fields()[10].schema(), other.faxNumber);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[11].schema(), other.emailAddress);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[12].schema(), other.validThroughDate);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing contactDetail instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.contactDetail other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[2].schema(), other.jobTitle);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.department)) {
        this.department = data().deepCopy(fields()[3].schema(), other.department);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.internationalDialingCdPhone)) {
        this.internationalDialingCdPhone = data().deepCopy(fields()[4].schema(), other.internationalDialingCdPhone);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[6].schema(), other.phoneNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.internationalDialingCdMobile)) {
        this.internationalDialingCdMobile = data().deepCopy(fields()[7].schema(), other.internationalDialingCdMobile);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[8].schema(), other.mobileNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.internaltionalDialingCodeFax)) {
        this.internaltionalDialingCodeFax = data().deepCopy(fields()[9].schema(), other.internaltionalDialingCodeFax);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.faxNumber)) {
        this.faxNumber = data().deepCopy(fields()[10].schema(), other.faxNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[11].schema(), other.emailAddress);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[12].schema(), other.validThroughDate);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'firstName' field.
      * The  facility contact person first name. Example: Frank
      * @return The value.
      */
    public java.lang.String getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * The  facility contact person first name. Example: Frank
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setFirstName(java.lang.String value) {
      validate(fields()[0], value);
      this.firstName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * The  facility contact person first name. Example: Frank
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'firstName' field.
      * The  facility contact person first name. Example: Frank
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * The  facility contact person last name. Example: Vanoutryve
      * @return The value.
      */
    public java.lang.String getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * The  facility contact person last name. Example: Vanoutryve
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setLastName(java.lang.String value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * The  facility contact person last name. Example: Vanoutryve
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastName' field.
      * The  facility contact person last name. Example: Vanoutryve
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobTitle' field.
      * The  facility contact person job title. Example: Commercial Manager
      * @return The value.
      */
    public java.lang.String getJobTitle() {
      return jobTitle;
    }


    /**
      * Sets the value of the 'jobTitle' field.
      * The  facility contact person job title. Example: Commercial Manager
      * @param value The value of 'jobTitle'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setJobTitle(java.lang.String value) {
      validate(fields()[2], value);
      this.jobTitle = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'jobTitle' field has been set.
      * The  facility contact person job title. Example: Commercial Manager
      * @return True if the 'jobTitle' field has been set, false otherwise.
      */
    public boolean hasJobTitle() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'jobTitle' field.
      * The  facility contact person job title. Example: Commercial Manager
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearJobTitle() {
      jobTitle = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'department' field.
      * The  facility contact person job department. Example: Commercial Area
      * @return The value.
      */
    public java.lang.String getDepartment() {
      return department;
    }


    /**
      * Sets the value of the 'department' field.
      * The  facility contact person job department. Example: Commercial Area
      * @param value The value of 'department'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setDepartment(java.lang.String value) {
      validate(fields()[3], value);
      this.department = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'department' field has been set.
      * The  facility contact person job department. Example: Commercial Area
      * @return True if the 'department' field has been set, false otherwise.
      */
    public boolean hasDepartment() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'department' field.
      * The  facility contact person job department. Example: Commercial Area
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearDepartment() {
      department = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'internationalDialingCdPhone' field.
      * The  facility contact person telephone international dialing code. Example: BE    +32
      * @return The value.
      */
    public java.lang.String getInternationalDialingCdPhone() {
      return internationalDialingCdPhone;
    }


    /**
      * Sets the value of the 'internationalDialingCdPhone' field.
      * The  facility contact person telephone international dialing code. Example: BE    +32
      * @param value The value of 'internationalDialingCdPhone'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setInternationalDialingCdPhone(java.lang.String value) {
      validate(fields()[4], value);
      this.internationalDialingCdPhone = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'internationalDialingCdPhone' field has been set.
      * The  facility contact person telephone international dialing code. Example: BE    +32
      * @return True if the 'internationalDialingCdPhone' field has been set, false otherwise.
      */
    public boolean hasInternationalDialingCdPhone() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'internationalDialingCdPhone' field.
      * The  facility contact person telephone international dialing code. Example: BE    +32
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearInternationalDialingCdPhone() {
      internationalDialingCdPhone = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * The  facility contact person phone extension. Example: 129
      * @return The value.
      */
    public java.lang.String getExtension() {
      return extension;
    }


    /**
      * Sets the value of the 'extension' field.
      * The  facility contact person phone extension. Example: 129
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setExtension(java.lang.String value) {
      validate(fields()[5], value);
      this.extension = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * The  facility contact person phone extension. Example: 129
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'extension' field.
      * The  facility contact person phone extension. Example: 129
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * The  facility contact person phone number. Example: 2245190912
      * @return The value.
      */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * The  facility contact person phone number. Example: 2245190912
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setPhoneNumber(java.lang.String value) {
      validate(fields()[6], value);
      this.phoneNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * The  facility contact person phone number. Example: 2245190912
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * The  facility contact person phone number. Example: 2245190912
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'internationalDialingCdMobile' field.
      * The  facility contact person mobile international dialing code. Example: TR    +90
      * @return The value.
      */
    public java.lang.String getInternationalDialingCdMobile() {
      return internationalDialingCdMobile;
    }


    /**
      * Sets the value of the 'internationalDialingCdMobile' field.
      * The  facility contact person mobile international dialing code. Example: TR    +90
      * @param value The value of 'internationalDialingCdMobile'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setInternationalDialingCdMobile(java.lang.String value) {
      validate(fields()[7], value);
      this.internationalDialingCdMobile = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'internationalDialingCdMobile' field has been set.
      * The  facility contact person mobile international dialing code. Example: TR    +90
      * @return True if the 'internationalDialingCdMobile' field has been set, false otherwise.
      */
    public boolean hasInternationalDialingCdMobile() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'internationalDialingCdMobile' field.
      * The  facility contact person mobile international dialing code. Example: TR    +90
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearInternationalDialingCdMobile() {
      internationalDialingCdMobile = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobileNumber' field.
      * The  facility contact person mobile number. Example: 5326541544
      * @return The value.
      */
    public java.lang.String getMobileNumber() {
      return mobileNumber;
    }


    /**
      * Sets the value of the 'mobileNumber' field.
      * The  facility contact person mobile number. Example: 5326541544
      * @param value The value of 'mobileNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setMobileNumber(java.lang.String value) {
      validate(fields()[8], value);
      this.mobileNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumber' field has been set.
      * The  facility contact person mobile number. Example: 5326541544
      * @return True if the 'mobileNumber' field has been set, false otherwise.
      */
    public boolean hasMobileNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mobileNumber' field.
      * The  facility contact person mobile number. Example: 5326541544
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearMobileNumber() {
      mobileNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'internaltionalDialingCodeFax' field.
      * The  facility contact person fax international dialing code. Example: TR    +90
      * @return The value.
      */
    public java.lang.String getInternaltionalDialingCodeFax() {
      return internaltionalDialingCodeFax;
    }


    /**
      * Sets the value of the 'internaltionalDialingCodeFax' field.
      * The  facility contact person fax international dialing code. Example: TR    +90
      * @param value The value of 'internaltionalDialingCodeFax'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setInternaltionalDialingCodeFax(java.lang.String value) {
      validate(fields()[9], value);
      this.internaltionalDialingCodeFax = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'internaltionalDialingCodeFax' field has been set.
      * The  facility contact person fax international dialing code. Example: TR    +90
      * @return True if the 'internaltionalDialingCodeFax' field has been set, false otherwise.
      */
    public boolean hasInternaltionalDialingCodeFax() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'internaltionalDialingCodeFax' field.
      * The  facility contact person fax international dialing code. Example: TR    +90
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearInternaltionalDialingCodeFax() {
      internaltionalDialingCodeFax = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'faxNumber' field.
      * The  facility contact person fax number. Example: 2245190400
      * @return The value.
      */
    public java.lang.String getFaxNumber() {
      return faxNumber;
    }


    /**
      * Sets the value of the 'faxNumber' field.
      * The  facility contact person fax number. Example: 2245190400
      * @param value The value of 'faxNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setFaxNumber(java.lang.String value) {
      validate(fields()[10], value);
      this.faxNumber = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'faxNumber' field has been set.
      * The  facility contact person fax number. Example: 2245190400
      * @return True if the 'faxNumber' field has been set, false otherwise.
      */
    public boolean hasFaxNumber() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'faxNumber' field.
      * The  facility contact person fax number. Example: 2245190400
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearFaxNumber() {
      faxNumber = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * The  facility contact person email address. Example: arcan@gemline.com.tr
      * @return The value.
      */
    public java.lang.String getEmailAddress() {
      return emailAddress;
    }


    /**
      * Sets the value of the 'emailAddress' field.
      * The  facility contact person email address. Example: arcan@gemline.com.tr
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setEmailAddress(java.lang.String value) {
      validate(fields()[11], value);
      this.emailAddress = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * The  facility contact person email address. Example: arcan@gemline.com.tr
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * The  facility contact person email address. Example: arcan@gemline.com.tr
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'validThroughDate' field.
      * The  facility contact person valid through date. Example: 31-12-99
      * @return The value.
      */
    public java.time.LocalDate getValidThroughDate() {
      return validThroughDate;
    }


    /**
      * Sets the value of the 'validThroughDate' field.
      * The  facility contact person valid through date. Example: 31-12-99
      * @param value The value of 'validThroughDate'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder setValidThroughDate(java.time.LocalDate value) {
      validate(fields()[12], value);
      this.validThroughDate = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'validThroughDate' field has been set.
      * The  facility contact person valid through date. Example: 31-12-99
      * @return True if the 'validThroughDate' field has been set, false otherwise.
      */
    public boolean hasValidThroughDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'validThroughDate' field.
      * The  facility contact person valid through date. Example: 31-12-99
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.contactDetail.Builder clearValidThroughDate() {
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public contactDetail build() {
      try {
        contactDetail record = new contactDetail();
        record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.String) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.String) defaultValue(fields()[1]);
        record.jobTitle = fieldSetFlags()[2] ? this.jobTitle : (java.lang.String) defaultValue(fields()[2]);
        record.department = fieldSetFlags()[3] ? this.department : (java.lang.String) defaultValue(fields()[3]);
        record.internationalDialingCdPhone = fieldSetFlags()[4] ? this.internationalDialingCdPhone : (java.lang.String) defaultValue(fields()[4]);
        record.extension = fieldSetFlags()[5] ? this.extension : (java.lang.String) defaultValue(fields()[5]);
        record.phoneNumber = fieldSetFlags()[6] ? this.phoneNumber : (java.lang.String) defaultValue(fields()[6]);
        record.internationalDialingCdMobile = fieldSetFlags()[7] ? this.internationalDialingCdMobile : (java.lang.String) defaultValue(fields()[7]);
        record.mobileNumber = fieldSetFlags()[8] ? this.mobileNumber : (java.lang.String) defaultValue(fields()[8]);
        record.internaltionalDialingCodeFax = fieldSetFlags()[9] ? this.internaltionalDialingCodeFax : (java.lang.String) defaultValue(fields()[9]);
        record.faxNumber = fieldSetFlags()[10] ? this.faxNumber : (java.lang.String) defaultValue(fields()[10]);
        record.emailAddress = fieldSetFlags()[11] ? this.emailAddress : (java.lang.String) defaultValue(fields()[11]);
        record.validThroughDate = fieldSetFlags()[12] ? this.validThroughDate : (java.time.LocalDate) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<contactDetail>
    WRITER$ = (org.apache.avro.io.DatumWriter<contactDetail>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<contactDetail>
    READER$ = (org.apache.avro.io.DatumReader<contactDetail>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










