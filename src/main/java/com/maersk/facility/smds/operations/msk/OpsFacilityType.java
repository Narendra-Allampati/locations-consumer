/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.facility.smds.operations.msk;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Ops Facility Types */
@org.apache.avro.specific.AvroGenerated
public class OpsFacilityType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4588882214240524935L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OpsFacilityType\",\"namespace\":\"com.maersk.facility.smds.operations.msk\",\"doc\":\"Ops Facility Types\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead\"},{\"name\":\"masterType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type\"},{\"name\":\"validThroughDate\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<OpsFacilityType> ENCODER =
      new BinaryMessageEncoder<OpsFacilityType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OpsFacilityType> DECODER =
      new BinaryMessageDecoder<OpsFacilityType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OpsFacilityType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OpsFacilityType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OpsFacilityType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OpsFacilityType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OpsFacilityType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OpsFacilityType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OpsFacilityType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OpsFacilityType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD */
  private java.lang.String code;
  /** The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead */
  private java.lang.String name;
  /** The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type */
  private java.lang.String masterType;
  /** The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99 */
  private java.time.LocalDate validThroughDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OpsFacilityType() {}

  /**
   * All-args constructor.
   * @param code The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
   * @param name The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
   * @param masterType The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
   * @param validThroughDate The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
   */
  public OpsFacilityType(java.lang.String code, java.lang.String name, java.lang.String masterType, java.time.LocalDate validThroughDate) {
    this.code = code;
    this.name = name;
    this.masterType = masterType;
    this.validThroughDate = validThroughDate;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return name;
    case 2: return masterType;
    case 3: return validThroughDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = value$ != null ? value$.toString() : null; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: masterType = value$ != null ? value$.toString() : null; break;
    case 3: validThroughDate = (java.time.LocalDate)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'masterType' field.
   * @return The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
   */
  public java.lang.String getMasterType() {
    return masterType;
  }


  /**
   * Sets the value of the 'masterType' field.
   * The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
   * @param value the value to set.
   */
  public void setMasterType(java.lang.String value) {
    this.masterType = value;
  }

  /**
   * Gets the value of the 'validThroughDate' field.
   * @return The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
   */
  public java.time.LocalDate getValidThroughDate() {
    return validThroughDate;
  }


  /**
   * Sets the value of the 'validThroughDate' field.
   * The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
   * @param value the value to set.
   */
  public void setValidThroughDate(java.time.LocalDate value) {
    this.validThroughDate = value;
  }

  /**
   * Creates a new OpsFacilityType RecordBuilder.
   * @return A new OpsFacilityType RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder newBuilder() {
    return new com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder();
  }

  /**
   * Creates a new OpsFacilityType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OpsFacilityType RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder newBuilder(com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder(other);
    }
  }

  /**
   * Creates a new OpsFacilityType RecordBuilder by copying an existing OpsFacilityType instance.
   * @param other The existing instance to copy.
   * @return A new OpsFacilityType RecordBuilder
   */
  public static com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder newBuilder(com.maersk.facility.smds.operations.msk.OpsFacilityType other) {
    if (other == null) {
      return new com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder();
    } else {
      return new com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder(other);
    }
  }

  /**
   * RecordBuilder for OpsFacilityType instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OpsFacilityType>
    implements org.apache.avro.data.RecordBuilder<OpsFacilityType> {

    /** The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD */
    private java.lang.String code;
    /** The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead */
    private java.lang.String name;
    /** The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type */
    private java.lang.String masterType;
    /** The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99 */
    private java.time.LocalDate validThroughDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.masterType)) {
        this.masterType = data().deepCopy(fields()[2].schema(), other.masterType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[3].schema(), other.validThroughDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing OpsFacilityType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.facility.smds.operations.msk.OpsFacilityType other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.masterType)) {
        this.masterType = data().deepCopy(fields()[2].schema(), other.masterType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[3].schema(), other.validThroughDate);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'code' field.
      * The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
      * @param value The value of 'code'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder setCode(java.lang.String value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * The operational facility alternate code information.This attribute is applicable for operational facility only. Example: FCT_TYPE.RAILHEAD
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder clearCode() {
      code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * The operational facility alternate name information.This attribute is applicable for operational facility only. Example: Railhead
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'masterType' field.
      * The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
      * @return The value.
      */
    public java.lang.String getMasterType() {
      return masterType;
    }


    /**
      * Sets the value of the 'masterType' field.
      * The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
      * @param value The value of 'masterType'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder setMasterType(java.lang.String value) {
      validate(fields()[2], value);
      this.masterType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'masterType' field has been set.
      * The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
      * @return True if the 'masterType' field has been set, false otherwise.
      */
    public boolean hasMasterType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'masterType' field.
      * The operational facility master type information.This attribute is applicable for operational facility only. Example: Facility Type
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder clearMasterType() {
      masterType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'validThroughDate' field.
      * The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
      * @return The value.
      */
    public java.time.LocalDate getValidThroughDate() {
      return validThroughDate;
    }


    /**
      * Sets the value of the 'validThroughDate' field.
      * The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
      * @param value The value of 'validThroughDate'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder setValidThroughDate(java.time.LocalDate value) {
      validate(fields()[3], value);
      this.validThroughDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'validThroughDate' field has been set.
      * The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
      * @return True if the 'validThroughDate' field has been set, false otherwise.
      */
    public boolean hasValidThroughDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'validThroughDate' field.
      * The operational facility valid through date.This attribute is applicable for operational facility only. Example: 31-12-99
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.msk.OpsFacilityType.Builder clearValidThroughDate() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OpsFacilityType build() {
      try {
        OpsFacilityType record = new OpsFacilityType();
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.masterType = fieldSetFlags()[2] ? this.masterType : (java.lang.String) defaultValue(fields()[2]);
        record.validThroughDate = fieldSetFlags()[3] ? this.validThroughDate : (java.time.LocalDate) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OpsFacilityType>
    WRITER$ = (org.apache.avro.io.DatumWriter<OpsFacilityType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OpsFacilityType>
    READER$ = (org.apache.avro.io.DatumReader<OpsFacilityType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










