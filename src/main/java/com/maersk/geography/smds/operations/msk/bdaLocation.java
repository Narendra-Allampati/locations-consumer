/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.geography.smds.operations.msk;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Display business defined area location and status information. Example : Liberty city */
@org.apache.avro.specific.AvroGenerated
public class bdaLocation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2497008056475212626L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"bdaLocation\",\"namespace\":\"com.maersk.geography.smds.operations.msk\",\"doc\":\"Display business defined area location and status information. Example : Liberty city\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The business defined area location  of geography object. Example: Pune\"},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The business defined area location type of geography object. Example: city or site\"},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The business defined area location status  of geography object. Example: Active or Inactive\"},{\"name\":\"alternateCodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"bdaLocationAlternateCode\",\"doc\":\"BDALocation AlternateCode Details\",\"fields\":[{\"name\":\"codeType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  alternate code type of business defined area location. Example: RKTS,RKST,GEOID\"},{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The  alternate code value of business defined area location. Example: INPNQ00\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<bdaLocation> ENCODER =
      new BinaryMessageEncoder<bdaLocation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<bdaLocation> DECODER =
      new BinaryMessageDecoder<bdaLocation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<bdaLocation> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<bdaLocation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<bdaLocation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<bdaLocation>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this bdaLocation to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a bdaLocation from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a bdaLocation instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static bdaLocation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The business defined area location  of geography object. Example: Pune */
  private java.lang.String name;
  /** The business defined area location type of geography object. Example: city or site */
  private java.lang.String type;
  /** The business defined area location status  of geography object. Example: Active or Inactive */
  private java.lang.String status;
  private java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> alternateCodes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public bdaLocation() {}

  /**
   * All-args constructor.
   * @param name The business defined area location  of geography object. Example: Pune
   * @param type The business defined area location type of geography object. Example: city or site
   * @param status The business defined area location status  of geography object. Example: Active or Inactive
   * @param alternateCodes The new value for alternateCodes
   */
  public bdaLocation(java.lang.String name, java.lang.String type, java.lang.String status, java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> alternateCodes) {
    this.name = name;
    this.type = type;
    this.status = status;
    this.alternateCodes = alternateCodes;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return type;
    case 2: return status;
    case 3: return alternateCodes;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = value$ != null ? value$.toString() : null; break;
    case 1: type = value$ != null ? value$.toString() : null; break;
    case 2: status = value$ != null ? value$.toString() : null; break;
    case 3: alternateCodes = (java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The business defined area location  of geography object. Example: Pune
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * The business defined area location  of geography object. Example: Pune
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The business defined area location type of geography object. Example: city or site
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * The business defined area location type of geography object. Example: city or site
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The business defined area location status  of geography object. Example: Active or Inactive
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * The business defined area location status  of geography object. Example: Active or Inactive
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'alternateCodes' field.
   * @return The value of the 'alternateCodes' field.
   */
  public java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> getAlternateCodes() {
    return alternateCodes;
  }


  /**
   * Sets the value of the 'alternateCodes' field.
   * @param value the value to set.
   */
  public void setAlternateCodes(java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> value) {
    this.alternateCodes = value;
  }

  /**
   * Creates a new bdaLocation RecordBuilder.
   * @return A new bdaLocation RecordBuilder
   */
  public static com.maersk.geography.smds.operations.msk.bdaLocation.Builder newBuilder() {
    return new com.maersk.geography.smds.operations.msk.bdaLocation.Builder();
  }

  /**
   * Creates a new bdaLocation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new bdaLocation RecordBuilder
   */
  public static com.maersk.geography.smds.operations.msk.bdaLocation.Builder newBuilder(com.maersk.geography.smds.operations.msk.bdaLocation.Builder other) {
    if (other == null) {
      return new com.maersk.geography.smds.operations.msk.bdaLocation.Builder();
    } else {
      return new com.maersk.geography.smds.operations.msk.bdaLocation.Builder(other);
    }
  }

  /**
   * Creates a new bdaLocation RecordBuilder by copying an existing bdaLocation instance.
   * @param other The existing instance to copy.
   * @return A new bdaLocation RecordBuilder
   */
  public static com.maersk.geography.smds.operations.msk.bdaLocation.Builder newBuilder(com.maersk.geography.smds.operations.msk.bdaLocation other) {
    if (other == null) {
      return new com.maersk.geography.smds.operations.msk.bdaLocation.Builder();
    } else {
      return new com.maersk.geography.smds.operations.msk.bdaLocation.Builder(other);
    }
  }

  /**
   * RecordBuilder for bdaLocation instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<bdaLocation>
    implements org.apache.avro.data.RecordBuilder<bdaLocation> {

    /** The business defined area location  of geography object. Example: Pune */
    private java.lang.String name;
    /** The business defined area location type of geography object. Example: city or site */
    private java.lang.String type;
    /** The business defined area location status  of geography object. Example: Active or Inactive */
    private java.lang.String status;
    private java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> alternateCodes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.geography.smds.operations.msk.bdaLocation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.alternateCodes)) {
        this.alternateCodes = data().deepCopy(fields()[3].schema(), other.alternateCodes);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing bdaLocation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.geography.smds.operations.msk.bdaLocation other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.alternateCodes)) {
        this.alternateCodes = data().deepCopy(fields()[3].schema(), other.alternateCodes);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * The business defined area location  of geography object. Example: Pune
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * The business defined area location  of geography object. Example: Pune
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * The business defined area location  of geography object. Example: Pune
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * The business defined area location  of geography object. Example: Pune
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * The business defined area location type of geography object. Example: city or site
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * The business defined area location type of geography object. Example: city or site
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder setType(java.lang.String value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * The business defined area location type of geography object. Example: city or site
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * The business defined area location type of geography object. Example: city or site
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * The business defined area location status  of geography object. Example: Active or Inactive
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * The business defined area location status  of geography object. Example: Active or Inactive
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder setStatus(java.lang.String value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * The business defined area location status  of geography object. Example: Active or Inactive
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * The business defined area location status  of geography object. Example: Active or Inactive
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder clearStatus() {
      status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateCodes' field.
      * @return The value.
      */
    public java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> getAlternateCodes() {
      return alternateCodes;
    }


    /**
      * Sets the value of the 'alternateCodes' field.
      * @param value The value of 'alternateCodes'.
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder setAlternateCodes(java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> value) {
      validate(fields()[3], value);
      this.alternateCodes = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateCodes' field has been set.
      * @return True if the 'alternateCodes' field has been set, false otherwise.
      */
    public boolean hasAlternateCodes() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'alternateCodes' field.
      * @return This builder.
      */
    public com.maersk.geography.smds.operations.msk.bdaLocation.Builder clearAlternateCodes() {
      alternateCodes = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public bdaLocation build() {
      try {
        bdaLocation record = new bdaLocation();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.String) defaultValue(fields()[1]);
        record.status = fieldSetFlags()[2] ? this.status : (java.lang.String) defaultValue(fields()[2]);
        record.alternateCodes = fieldSetFlags()[3] ? this.alternateCodes : (java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<bdaLocation>
    WRITER$ = (org.apache.avro.io.DatumWriter<bdaLocation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<bdaLocation>
    READER$ = (org.apache.avro.io.DatumReader<bdaLocation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.name);

    out.writeString(this.type);

    out.writeString(this.status);

    long size0 = this.alternateCodes.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode e0: this.alternateCodes) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.name = in.readString();

      this.type = in.readString();

      this.status = in.readString();

      long size0 = in.readArrayStart();
      java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> a0 = this.alternateCodes;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>((int)size0, SCHEMA$.getField("alternateCodes").schema());
        this.alternateCodes = a0;
      } else a0.clear();
      SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.name = in.readString();
          break;

        case 1:
          this.type = in.readString();
          break;

        case 2:
          this.status = in.readString();
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> a0 = this.alternateCodes;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>((int)size0, SCHEMA$.getField("alternateCodes").schema());
            this.alternateCodes = a0;
          } else a0.clear();
          SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.maersk.geography.smds.operations.msk.bdaLocationAlternateCode();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










